{"version":3,"sources":["serviceWorker.ts","components/hooks/useStorageBackedState.tsx","state/GameState.ts","state/RandomSpectrumTarget.ts","state/RandomFourCharacterString.ts","components/common/LayoutElements.tsx","components/common/GetContrastingColors.ts","components/common/Title.tsx","components/gameplay/InputName.tsx","state/GameModelContext.ts","components/common/Spectrum.tsx","components/common/Button.tsx","components/common/Info.tsx","components/common/Animate.tsx","components/gameplay/GiveClue.tsx","state/GetScore.ts","state/ScoreRound.ts","components/gameplay/MakeGuess.tsx","TrackEvent.ts","state/SpectrumCards.ts","state/BuildGameModel.ts","state/NewRound.ts","components/gameplay/ViewScore.tsx","components/gameplay/JoinTeam.tsx","state/NewGame.ts","components/gameplay/Scoreboard.tsx","components/gameplay/SetupGame.tsx","components/gameplay/CounterGuess.tsx","components/gameplay/PreviousTurnResult.tsx","components/gameplay/ActiveGame.tsx","components/common/RoomIdHeader.tsx","components/gameplay/FakeRooms.tsx","components/gameplay/GameRoom.tsx","components/hooks/useNetworkBackedGameState.tsx","components/common/CommonFooter.tsx","components/common/LandingPage.tsx","components/App.tsx","index.tsx","firebaseConfig.ts"],"names":["Boolean","window","location","hostname","match","useStorageBackedState","initialValue","key","storedItem","localStorage","getItem","setItem","JSON","stringify","parse","useState","value","setValue","newValue","RoundPhase","GameType","Team","RandomSpectrumTarget","Math","floor","random","RandomFourCharacterString","characters","randomString","i","length","TeamReverse","team","Left","Right","Unset","TeamName","InitialGameState","gameType","Teams","roundPhase","SetupGame","turnsTaken","deckSeed","deckIndex","spectrumTarget","clue","guess","counterGuess","players","clueGiver","leftScore","rightScore","coopScore","coopBonusTurns","previousTurn","baseFlexStyles","display","flexFlow","justifyContent","alignItems","CenteredRow","props","style","children","CenteredColumn","ColorScheme","require","GetContrastingColors","hue","scheme","from_hue","variation","colors","LongwaveAppTitle","setHue","primary","secondary","useEffect","interval","setInterval","clearInterval","backgroundImage","WebkitBackgroundClip","WebkitTextFillColor","InputName","inputRef","useRef","type","ref","onKeyDown","event","current","setName","GameModelContext","createContext","gameState","localPlayer","id","name","spectrumCard","setGameState","newState","console","warn","Spectrum","acc","charCodeAt","getStringHash","cardBackStyle","padding","fontWeight","handleStyle","height","width","backgroundColor","borderColor","dotStyle","cursor","bottom","borderWidth","transform","onChange","boxShadow","undefined","handleValue","marks","targetValue","color","label","guessingValue","min","max","trackStyle","railStyle","background","Button","margin","text","onClick","disabled","Info","content","placement","icon","faInfoCircle","Animate","animation","className","setClassName","setTimeout","GiveClue","useContext","inputElement","disableSubmit","setDisableSubmit","submit","MakeGuess","Cooperative","placeholder","GetScore","target","difference","abs","ScoreTeamRound","guessingTeam","pointsScored","wasCounterGuessCorrect","finalState","ViewScore","notMyTurn","guessingTeamString","Object","keys","border","href","eventName","eventBody","spectrum_card","join","toString","firebase","analytics","logEvent","app_name","screen_name","CounterGuess","effectivePointsScored","ScoreCoopRound","AllCards","shuffleSeed","getSeededDeck","memoize","seed","cards","shuffle","BuildGameModel","localPlayerId","spectrumDeck","NewRound","playerId","gameModel","clueGiverName","score","bonusCoopTurn","NextTurnOrEndGame","resetButton","scoringTeamString","bonusTurn","nextTeam","eligibleToDraw","JoinTeam","leftTeam","filter","rightTeam","joinTeam","alignSelf","map","PickTeams","startPlayer","initialScores","NewTeamGame","Scoreboard","borderTop","paddingTop","Freeplay","flexWrap","toPlayerRow","cardsRemaining","TeamColumn","members","AnimatableScore","lastScore","position","fontSize","top","right","PlayerRow","player","hovered","setHovered","iconContainerStyle","marginLeft","onMouseEnter","onMouseLeave","faTimesCircle","startGame","counterGuessTeamString","PreviousTurnResult","zIndex","left","ActiveGame","RoomIdHeader","roomId","useParams","RoomMenu","interactive","tabIndex","faEllipsisV","FakeRooms","ul","ll","ur","lr","setPartialGameState","renderGame","Provider","GameRoom","Error","playerName","setPlayerName","dbRef","database","on","appState","networkGameState","val","completeGameState","set","off","useNetworkBackedGameState","searchParams","URLSearchParams","search","get","rocketcrabPlayerName","CommonFooter","flexDirection","Link","alt","title","src","rel","LandingPage","history","useHistory","push","maxWidth","App","path","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"iMAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0CChBC,SAASC,EAAyBC,EAAiBC,GACxD,IAAMC,EAAaC,aAAaC,QAAQH,GACtB,MAAdC,EACFC,aAAaE,QAAQJ,EAAKK,KAAKC,UAAUP,IAEzCA,EAAeM,KAAKE,MAAMN,GALkE,MAQpEO,mBAAST,GAR2D,mBAQvFU,EARuF,KAQhFC,EARgF,KAU9F,MAAO,CACLD,EACA,SAACE,GACCT,aAAaE,QAAQJ,EAAKK,KAAKC,UAAUK,IACzCD,EAASC,K,ICbHC,EASAC,EAMAC,E,aClBL,SAASC,IACd,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,UCDlB,SAASC,IAGd,IAFA,IAAMC,EAAa,uCACfC,EAAe,GACVC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAAgBD,EAAWJ,KAAKC,MAAMD,KAAKE,SAAWE,EAAWG,SAEnE,OAAOF,EFkBF,SAASG,EAAYC,GAC1B,OAAIA,IAASX,EAAKY,KACTZ,EAAKa,MAEVF,IAASX,EAAKa,MACTb,EAAKY,KAEPZ,EAAKc,MAGP,SAASC,EAASJ,GACvB,OAAIA,IAASX,EAAKY,KACT,aAELD,IAASX,EAAKa,MACT,cAEF,cAqCF,SAASG,IACd,MAAO,CACLC,SAAUlB,EAASmB,MACnBC,WAAYrB,EAAWsB,UACvBC,YAAa,EACbC,SAAUjB,IACVkB,UAAW,EACXC,eAAgBvB,IAChBwB,KAAM,GACNC,MAAO,EACPC,aAAc,OACdC,QAAS,GACTC,UAAW,GACXC,UAAW,EACXC,WAAY,EACZC,UAAW,EACXC,eAAgB,EAChBC,aAAc,O,SA5FNpC,O,yBAAAA,I,yBAAAA,I,uBAAAA,I,yBAAAA,I,+BAAAA,I,0BAAAA,M,cASAC,O,iBAAAA,I,6BAAAA,I,wBAAAA,M,cAMAC,O,iBAAAA,I,eAAAA,I,kBAAAA,M,KGhBZ,IAAMmC,EAAsC,CAC1CC,QAAS,OACTC,SAAU,MACVC,eAAgB,eAChBC,WAAY,UAGP,SAASC,EAAYC,GAI1B,OACE,qBACEC,MAAK,2BACAP,GADA,IAEHE,SAAU,OACPI,EAAMC,OAJb,SAOGD,EAAME,WAKN,SAASC,EAAeH,GAI7B,OACE,qBACEC,MAAK,2BACAP,GADA,IAEHE,SAAU,UACPI,EAAMC,OAJb,SAOGD,EAAME,WCtCb,IAAME,EAAmBC,EAAQ,IAE1B,SAASC,EAAqBC,GACnC,IAAMC,EAAS,IAAIJ,EACnBI,EAAOC,SAASF,GAAKC,OAAO,YAAYE,UAAU,QAFgB,MAGrBF,EAAOG,SAHc,mBAIlE,MAAO,CAAC,IAJ0D,KAI3C,IAJ2C,MCG7D,SAASC,IAAoB,IAAD,EACX3D,mBAAS,GADE,mBAC1BsD,EAD0B,KACrBM,EADqB,OAEJP,EAAqBC,GAFjB,mBAE1BO,EAF0B,KAEjBC,EAFiB,KASjC,OANAC,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3BL,GAAO,SAACN,GAAD,OAAUA,EAAM,GAAK,SAC3B,GACH,OAAO,kBAAMY,cAAcF,OAG3B,oBACEhB,MAAO,CACLmB,gBAAgB,0BAAD,OAA4BN,EAA5B,iBAA4CC,EAA5C,SACfM,qBAAsB,OACtBC,oBAAqB,eAJzB,sBCVG,SAASC,EAAUvB,GACxB,IAAMwB,EAAWC,iBAAyB,MAC1C,OACE,eAACtB,EAAD,WACE,cAACS,EAAD,IACA,mDACA,uBACEc,KAAK,OACLC,IAAKH,EACLI,UAAW,SAACC,GACV,QAAKL,EAASM,UAGI,UAAdD,EAAMpF,UAGVuD,EAAM+B,QAAQP,EAASM,QAAQ5E,cCjBlC,IAAM8E,EAAmBC,wBAAyB,CACvDC,UAAW3D,IACX4D,YAAa,CACXC,GAAI,cACJC,KAAM,SACNnE,KAAMX,EAAKc,OAEbe,UAAW,KACXkD,aAAc,CAAC,OAAQ,SACvBC,aAAc,SAACC,GACbC,QAAQC,KACN,oDACE5F,KAAKC,UAAUyF,O,QCXhB,SAASG,EAAS3C,GAMrB,IAAD,EAC4BM,EAoF/B,SAAuBpD,GAErB,IADA,IAAI0F,EAAM,EACD7E,EAAI,EAAGA,EAAIb,EAAMc,OAAQD,IAChC6E,GAAO1F,EAAM2F,WAAW9E,GAE1B,OAAO6E,EAxFLE,CAAc9C,EAAMsC,aAAa,KAFlC,mBACMxB,EADN,KACeC,EADf,KAIKgC,EAAqC,CACzCC,QAAS,EACTC,WAAY,QAGVC,EAAmC,CACrCC,OAAQ,GACRC,MAAO,GACPC,gBAAiB,wBACjBC,YAAa,SAGTC,EAAQ,2BACTL,GADS,IAEZM,OAAQ,OACRC,QAAS,EACTC,YAAa,EACbC,UAAW,qBAGR3D,EAAM4D,WACTV,EAAYM,OAAS,OACrBN,EAAYW,UAAY,aAGAC,IAAtB9D,EAAM+D,cACRb,EAAYvD,QAAU,QAGxB,IAAIqE,EAEA,GAgBJ,YAd0BF,IAAtB9D,EAAMiE,cACRD,EAAMhE,EAAMiE,aAAe,CACzBhE,MAAO,CAAEgD,WAAY,OAAQiB,MAAO,QAASV,OAAQ,QACrDW,MAAO,gBAIiBL,IAAxB9D,EAAMoE,gBACRJ,EAAMhE,EAAMoE,eAAiB,CAC3BnE,MAAO,CAAEgD,WAAY,OAAQiB,MAAO,QAASV,OAAQ,QACrDW,MAAO,gBAKT,qBAAKlE,MAAO,CAAE+C,QAAS,GAAvB,SACE,eAAC7C,EAAD,CAAgBF,MAAO,CAAEH,WAAY,WAArC,UACE,eAACC,EAAD,CAAaE,MAAO,CAAEJ,eAAgB,iBAAtC,UACE,qBAAKI,MAAK,2BAAO8C,GAAP,IAAsBM,gBAAiBvC,IAAjD,SACGd,EAAMsC,aAAa,KAEtB,qBAAKrC,MAAK,2BAAO8C,GAAP,IAAsBM,gBAAiBtC,IAAjD,SACGf,EAAMsC,aAAa,QAGxB,qBAAKrC,MAAO,CAAE+C,QAAS,aAAvB,SACE,cAAC,IAAD,CACEqB,IAAK,EACLC,IAAK,GACLpH,MAAO8C,EAAM+D,YACbQ,WAAY,CACVlB,gBAAiB,eAEnBmB,UAAW,CACTC,WAAW,0BAAD,OAA4B3D,EAA5B,gBAA2CC,EAA3C,UACVoC,OAAQ,GAEVD,YAAaA,EACbU,SAAU5D,EAAM4D,SAChBI,MAAOA,EACPT,SAAUA,WCvFf,SAASmB,EAAO1E,GACrB,OACE,uBACEC,MAAO,CACL+C,QAAS,EACT2B,OAAQ,GAEVjD,KAAK,SACLxE,MAAO8C,EAAM4E,KACbC,QAAS7E,EAAM6E,QACfC,SAAU9E,EAAM8E,W,4BCLf,SAASC,EAAK/E,GACnB,OACE,cAAC,IAAD,CAAOgF,QAAShF,EAAME,SAAU+E,UAAU,SAA1C,SACE,qBAAKhF,MAAO,CAAE0E,OAAQ,GAAtB,SACE,cAAC,IAAD,CAAiBO,KAAMC,UCRxB,SAASC,EAAQpF,GAIpB,IAAD,EACiC/C,mBAAiB+C,EAAMqF,WADxD,mBACMC,EADN,KACiBC,EADjB,KASD,OANAvE,qBAAU,WACRwE,YAAW,WACT,OAAOD,EAAavF,EAAMqF,UAAY,kBAKxC,qBAAKC,UAAWA,EAAWrF,MAAOD,EAAMC,MAAxC,SACGD,EAAME,WCNN,SAASuF,IAAY,IAAD,MAOrBC,qBAAW1D,GALbE,EAFuB,EAEvBA,UACAC,EAHuB,EAGvBA,YACA/C,EAJuB,EAIvBA,UACAkD,EALuB,EAKvBA,aACAC,EANuB,EAMvBA,aAEIoD,EAAelE,iBAAyB,MARrB,EASiBxE,qBACxC,UAAC0I,EAAa7D,eAAd,iBAAC,EAAsB5E,aAAvB,aAAC,EAA6Bc,SAVP,mBASlB4H,EATkB,KASHC,EATG,KAazB,IAAKzG,EAIH,OAHAmD,EAAa,CACXnD,UAAW+C,EAAYC,KAElB,KAGT,GAAID,EAAYC,KAAOhD,EAAUgD,GAC/B,OACE,gCACE,cAACgD,EAAD,CAASC,UAAU,oBAAnB,SACE,cAAC1C,EAAD,CAAUL,aAAcA,MAE1B,cAACnC,EAAD,UACE,+CAAkBf,EAAUiD,KAA5B,gCAMR,IAAMyD,EAAS,WAAO,IAAD,IACnB,KAAI,UAACH,EAAa7D,eAAd,iBAAC,EAAsB5E,aAAvB,aAAC,EAA6Bc,QAChC,OAAO,EAGTuE,EAAa,CACXvD,KAAM2G,EAAa7D,QAAQ5E,MAC3B+B,MAAO,GACPP,WAAYrB,EAAW0I,aAU3B,OACE,gCACG7D,EAAU1D,WAAalB,EAAS0I,aAC/B,cAAC7F,EAAD,CAAgBF,MAAO,CAAEH,WAAY,YAArC,SACE,cAAC4E,EAAD,CAAQE,KAAK,wBAAwBC,QAV1B,kBACjBtC,EAAa,CACXzD,UAAWoD,EAAUpD,UAAY,EACjCC,eAAgBvB,WAUhB,cAAC4H,EAAD,CAASC,UAAU,oBAAnB,SACE,cAAC1C,EAAD,CACEsB,YAAa/B,EAAUnD,eACvBuD,aAAcA,MAGlB,eAACnC,EAAD,WACE,eAACJ,EAAD,WACE,uBACE2B,KAAK,OACLuE,YAAY,UACZtE,IAAKgE,EACL/D,UAAW,SAACC,GACV,GAAkB,UAAdA,EAAMpF,IACR,OAAO,EAETqJ,KAEFlC,SAAU,0BACRiC,IAAiB,UAACF,EAAa7D,eAAd,iBAAC,EAAsB5E,aAAvB,aAAC,EAA6Bc,YAGnD,cAAC+G,EAAD,UACE,iQAKE,+BACE,yDACA,+CACA,oDACA,yDAKR,cAACL,EAAD,CAAQE,KAAK,cAAcC,QAASiB,EAAQhB,SAAUc,U,OC1GvD,SAASM,EAASC,EAAgBlH,GACvC,IAAMmH,EAAa3I,KAAK4I,IAAIF,EAASlH,GACrC,OAAImH,EAAa,EACR,EAEF,EAAI3I,KAAKC,MAAM0I,GCiBjB,SAASE,EACdpE,EACAqE,EACArH,GAEA,IAAMsH,EAAeN,EAAShE,EAAUnD,eAAgBmD,EAAUjD,OAC5DwH,EACc,SAAjBvH,GAA2BgD,EAAUnD,eAAiBmD,EAAUjD,OAC/C,UAAjBC,GAA4BgD,EAAUnD,eAAiBmD,EAAUjD,MAEhEyH,EAAiC,CACnChI,WAAYrB,EAAWsJ,UACvBzH,gBAeF,OAZIqH,IAAiBhJ,EAAKa,QACxBsI,EAAWpH,WAAa4C,EAAU5C,WAAakH,EAC/CE,EAAWrH,UACT6C,EAAU7C,WAAaoH,EAAyB,EAAI,IAGpDF,IAAiBhJ,EAAKY,OACxBuI,EAAWrH,UAAY6C,EAAU7C,UAAYmH,EAC7CE,EAAWpH,WACT4C,EAAU5C,YAAcmH,EAAyB,EAAI,IAGlDC,ECxCF,SAASX,IAAa,IAAD,EAOtBL,qBAAW1D,GALbE,EAFwB,EAExBA,UACAC,EAHwB,EAGxBA,YACA/C,EAJwB,EAIxBA,UACAkD,EALwB,EAKxBA,aACAC,EANwB,EAMxBA,aAGF,IAAKnD,EACH,OAAO,KAGT,IAAMwH,EACJzE,EAAYC,KAAOhD,EAAUgD,IAC5BF,EAAU1D,WAAalB,EAASmB,OAC/B0D,EAAYjE,OAASkB,EAAUlB,KAE7B2I,EAAqBvI,EAASc,EAAUlB,MAE9C,OAAI0I,EAEA,gCACE,cAACjE,EAAD,CAAUL,aAAcA,EAAc8B,cAAelC,EAAUjD,QAC/D,eAACkB,EAAD,WACE,gCACGf,EAAUiD,KADb,YAC2B,iCAASH,EAAUlD,UAE9C,+CAAkB6H,EAAlB,kBACCC,OAAOC,KAAK7E,EAAU/C,SAASnB,OAAS,GACvC,sBACEiC,MAAO,CACL0E,OAAQ,GACR3B,QAAS,QACTgE,OAAQ,mBAJZ,UAOE,uEACA,2DAA8B7K,OAAOC,SAAS6K,iBASxD,gCACE,cAACtE,EAAD,CACEL,aAAcA,EACdyB,YAAa7B,EAAUjD,MACvB2E,SAAU,SAAC3E,GACTsD,EAAa,CACXtD,aAIN,eAACkB,EAAD,WACE,gCACGf,EAAUiD,KADb,YAC2B,iCAASH,EAAUlD,UAE9C,8BACE,cAAC0F,EAAD,CACEE,KAAI,2BAAsBtG,EAAS6D,EAAYjE,OAC/C2G,QAAS,WCtEd,IACLqC,EACAC,EADAD,EDsEwB,kBCrExBC,EDqE2C,CAC7BC,cAAe9E,EAAa+E,KAAK,KACjCrI,KAAMkD,EAAUlD,KAChBmH,OAAQjE,EAAUnD,eAAeuI,WACjCrI,MAAOiD,EAAUjD,MAAMqI,YCvErCC,IAASC,YAAYC,SAASP,EAA9B,aACEQ,SAAU,WACVC,YAAa,SACVR,IDuEWjF,EAAU1D,WAAalB,EAASmB,MAClC8D,EAAa,CACX7D,WAAYrB,EAAWuK,eAEhB1F,EAAU1D,WAAalB,EAAS0I,YACzCzD,EDnFT,SAAwBL,GAC7B,IAAM2F,EAAwB3B,EAC5BhE,EAAUnD,eACVmD,EAAUjD,OAERyH,EAAiC,CACnChI,WAAYrB,EAAWsJ,WAUzB,OAP8B,IAA1BkB,GACFnB,EAAWnH,UAAY2C,EAAU3C,UAAY,EAC7CmH,EAAWlH,eAAiB0C,EAAU1C,eAAiB,GAEvDkH,EAAWnH,UAAY2C,EAAU3C,UAAYsI,EAGxCnB,ECmEoBoB,CAAe5F,IAE5BK,EAAa,CACX7D,WAAYrB,EAAWsJ,uB,qBEyK5BoB,EAAQ,UAlQqB,CACxC,CAAC,YAAa,cACd,CAAC,QAAS,WACV,CAAC,YAAa,aACd,CAAC,SAAU,WACX,CAAC,iBAAkB,oBACnB,CAAC,MAAO,UACR,CAAC,QAAS,UACV,CAAC,wBAAyB,gCAC1B,CAAC,QAAS,SACV,CAAC,8BAA+B,8BAChC,CAAC,SAAU,aACX,CAAC,YAAa,iBACd,CAAC,iBAAkB,qBACnB,CAAC,cAAe,cAChB,CAAC,gBAAiB,YAClB,CAAC,UAAW,UACZ,CAAC,QAAS,SACV,CAAC,uBAAwB,yBACzB,CAAC,iBAAkB,oBACnB,CAAC,QAAS,QACV,CAAC,gBAAiB,eAClB,CAAC,kBAAmB,aACpB,CAAC,iBAAkB,mBACnB,CAAC,cAAe,aAChB,CAAC,aAAc,eACf,CAAC,SAAU,SACX,CAAC,YAAa,aACd,CAAC,sBAAuB,8BACxB,CAAC,SAAU,QACX,CAAC,sBAAuB,0BACxB,CAAC,aAAc,aACf,CAAC,aAAc,cACf,CAAC,eAAgB,cACjB,CAAC,UAAW,eACZ,CAAC,WAAY,WACb,CAAC,aAAc,aACf,CAAC,aAAc,YACf,CAAC,YAAa,cACd,CAAC,UAAW,UACZ,CAAC,iCAAkC,qCACnC,CAAC,cAAe,aAChB,CAAC,gBAAiB,iBAClB,CAAC,OAAQ,UACT,CAAC,sBAAuB,sBACxB,CAAC,qBAAsB,oBACvB,CAAC,UAAW,SACZ,CAAC,aAAc,YACf,CAAC,eAAgB,gBACjB,CAAC,WAAY,UACb,CAAC,eAAgB,iBACjB,CAAC,cAAe,gBAChB,CAAC,0BAA2B,0BAC5B,CAAC,oBAAqB,oBACtB,CAAC,MAAO,WACR,CAAC,OAAQ,UACT,CAAC,oBAAqB,oBACtB,CAAC,MAAO,QACR,CAAC,mBAAoB,oBACrB,CAAC,0BAA2B,0BAC5B,CAAC,WAAY,cACb,CAAC,UAAW,QACZ,CAAC,yBAA0B,yBAC3B,CAAC,SAAU,YACX,CAAC,sBAAuB,wBACxB,CAAC,YAAa,WACd,CAAC,SAAU,SACX,CAAC,oBAAqB,oBACtB,CAAC,UAAW,gBACZ,CAAC,MAAO,QACR,CAAC,SAAU,SACX,CAAC,YAAa,YACd,CAAC,cAAe,gBAChB,CAAC,eAAgB,gBACjB,CAAC,UAAW,UACZ,CAAC,OAAQ,UACT,CAAC,eAAgB,cACjB,CAAC,QAAS,aACV,CAAC,oBAAqB,oBACtB,CAAC,YAAa,cACd,CAAC,cAAe,aAChB,CAAC,QAAS,SACV,CAAC,gBAAiB,kBAClB,CAAC,aAAc,aACf,CAAC,eAAgB,qBACjB,CAAC,SAAU,UACX,CAAC,YAAa,YACd,CAAC,MAAO,OACR,CAAC,mBAAoB,mBACrB,CAAC,YAAa,cACd,CAAC,WAAY,cACb,CAAC,UAAW,WACZ,CAAC,OAAQ,QACT,CAAC,OAAQ,QACT,CAAC,wBAAyB,wBAC1B,CAAC,YAAa,cACd,CAAC,aAAc,cACf,CAAC,OAAQ,eACT,CAAC,aAAc,cACf,CAAC,kBAAmB,qBACpB,CAAC,wBAAyB,uBAC1B,CAAC,kBAAmB,eACpB,CAAC,aAAc,YACf,CAAC,eAAgB,gBACjB,CAAC,WAAY,iBACb,CAAC,mBAAoB,oBACrB,CAAC,UAAW,YACZ,CAAC,YAAa,WACd,CAAC,UAAW,YACZ,CAAC,yBAA0B,2BAC3B,CAAC,WAAY,SACb,CAAC,aAAc,YACf,CAAC,aAAc,cACf,CAAC,YAAa,aACd,CAAC,kBAAmB,oBACpB,CAAC,YAAa,cACd,CAAC,OAAQ,aACT,CAAC,gBAAiB,mBAClB,CAAC,0BAA2B,0BAC5B,CAAC,WAAY,iBACb,CAAC,oBAAqB,qBACtB,CAAC,cAAe,aAChB,CAAC,iBAAkB,cACnB,CAAC,YAAa,QACd,CAAC,yBAA0B,4BAC3B,CAAC,WAAY,aACb,CAAC,oCAAqC,oCACtC,CAAC,cAAe,gBAChB,CAAC,gBAAiB,eAClB,CAAC,cAAe,cAChB,CAAC,SAAU,SACX,CAAC,OAAQ,QACT,CAAC,WAAY,YACb,CAAC,cAAe,iBAChB,CAAC,4BAA6B,gCAC9B,CAAC,YAAa,WACd,CAAC,eAAgB,qBACjB,CAAC,oBAAqB,sBACtB,CAAC,WAAY,UACb,CAAC,QAAS,UACV,CAAC,cAAe,gBAChB,CAAC,WAAY,WACb,CAAC,mBAAoB,mBACrB,CAAC,aAAc,eACf,CAAC,QAAS,QACV,CAAC,YAAa,eACd,CAAC,gBAAiB,oBAClB,CAAC,qBAAsB,qBACvB,CAAC,QAAS,QACV,CAAC,eAAgB,cACjB,CAAC,SAAU,UACX,CAAC,aAAc,eACf,CAAC,YAAa,aACd,CAAC,eAAgB,eACjB,CAAC,aAAc,SACf,CAAC,OAAQ,SACT,CAAC,mBAAoB,mBACrB,CAAC,mBAAoB,eACrB,CAAC,QAAS,SACV,CAAC,MAAO,OACR,CAAC,aAAc,eACf,CAAC,aAAc,iBACf,CAAC,OAAQ,QACT,CAAC,sBAAuB,sBACxB,CAAC,WAAY,SACb,CAAC,aAAc,iBACf,CAAC,gBAAiB,gBAClB,CAAC,cAAe,eAChB,CAAC,eAAgB,oBAG+B,CAChD,CAAC,QAAS,QACV,CAAC,wBAAyB,wBAC1B,CAAC,SAAU,YACX,CAAC,qBAAsB,qBACvB,CAAC,eAAgB,cACjB,CAAC,eAAgB,qBACjB,CAAC,gBAAiB,kBAClB,CAAC,QAAS,WACV,CAAC,aAAc,YACf,CAAC,YAAa,WACd,CAAC,YAAa,YACd,CAAC,eAAgB,gBACjB,CAAC,aAAc,YACf,CAAC,iBAAkB,kBACnB,CAAC,SAAU,SACX,CAAC,2BAA4B,2BAC7B,CAAC,eAAgB,YACjB,CAAC,gBAAiB,eAClB,CAAC,iBAAkB,cACnB,CAAC,UAAW,WACZ,CAAC,eAAgB,YACjB,CAAC,WAAY,YACb,CAAC,oBAAqB,mBACtB,CAAC,YAAa,cACd,CAAC,YAAa,cACd,CAAC,cAAe,WAChB,CAAC,gBAAiB,kBAClB,CAAC,UAAW,SACZ,CAAC,gBAAiB,kBAClB,CAAC,oBAAqB,oBACtB,CAAC,uBAAwB,yBACzB,CAAC,UAAW,aACZ,CAAC,OAAQ,QACT,CAAC,cAAe,iBAChB,CAAC,YAAa,WACd,CAAC,aAAc,YACf,CAAC,QAAS,QACV,CAAC,YAAa,kBACd,CAAC,OAAQ,QACT,CAAC,aAAc,eACf,CAAC,UAAW,cACZ,CAAC,UAAW,OACZ,CAAC,SAAU,QACX,CAAC,kBAAmB,qBACpB,CAAC,gBAAiB,eAClB,CAAC,OAAQ,SACT,CAAC,kBAAmB,kBACpB,CAAC,eAAgB,aACjB,CAAC,YAAa,YACd,CAAC,QAAS,gBACV,CAAC,gBAAiB,cAClB,CAAC,kBAAmB,kBACpB,CAAC,eAAgB,mBACjB,CAAC,aAAc,eACf,CAAC,sBAAuB,iBACxB,CAAC,cAAe,cAChB,CAAC,qBAAsB,yBACvB,CAAC,OAAQ,SACT,CAAC,QAAS,aACV,CAAC,UAAW,iBACZ,CAAC,aAAc,eACf,CAAC,iBAAkB,mBACnB,CAAC,aAAc,UACf,CAAC,cAAe,gBAChB,CAAC,YAAa,cACd,CAAC,OAAQ,QACT,CAAC,WAAY,cACb,CAAC,2BAA4B,4BAC7B,CAAC,UAAW,YACZ,CAAC,eAAgB,gBACjB,CAAC,sBAAuB,qBACxB,CAAC,kBAAmB,kBACpB,CAAC,YAAa,gBACd,CAAC,OAAQ,SACT,CAAC,iBAAkB,gBACnB,CAAC,YAAa,WACd,CAAC,SAAU,oBACX,CAAC,YAAa,WACd,CAAC,MAAO,YACR,CAAC,iBAAkB,YACnB,CAAC,oBAAkB,mBACnB,CAAC,QAAS,QACV,CAAC,YAAa,aACd,CAAC,kBAAmB,sBC3PhBC,EAEF3H,EAAQ,KAgBN4H,EAAgBC,KAAQ,SAACC,EAAcC,GAAf,OAC5BJ,EAAYK,QAAQD,EAAOD,MAGtB,SAASG,EACdpG,EACAK,EACAgG,GAEA,IAAMnJ,EAAY8C,EAAU/C,QAAQ+C,EAAU9C,WAA5B,2BAET8C,EAAU/C,QAAQ+C,EAAU9C,YAFnB,IAGZgD,GAAIF,EAAU9C,YAEhB,KAEEoJ,EAAeP,EAAc/F,EAAUrD,SAAUkJ,GAEvD,MAAO,CACL7F,YACAC,YAAY,2BAAMD,EAAU/C,QAAQoJ,IAAzB,IAAyCnG,GAAImG,IACxDnJ,YACAkD,aAAckG,EAAatG,EAAUpD,UAAY0J,EAAaxK,QAC9DuE,gBCzCG,SAASkG,EACdC,EACAxG,GAEA,IAAMyG,EAAYL,EAAepG,GAAW,cAAUwG,GAEhDlG,EAA+B,CACnCpD,UAAWsJ,EACXhK,WAAYrB,EAAWoI,SACvB3G,UAAWoD,EAAUpD,UAAY,EACjCF,WAAYsD,EAAUtD,WAAa,EACnCG,eAAgBvB,KAalB,OAV4B,OAAxBmL,EAAUvJ,YACZoD,EAAS/C,aAAe,CACtB6C,aAAcqG,EAAUrG,aACxBvD,eAAgBmD,EAAUnD,eAC1B6J,cAAeD,EAAUvJ,UAAUiD,KACnCrD,KAAMkD,EAAUlD,KAChBC,MAAOiD,EAAUjD,QAIduD,ECZF,SAASmE,IAAa,IAAD,EACqBjB,qBAAW1D,GAAlDE,EADkB,EAClBA,UAAW9C,EADO,EACPA,UAAWkD,EADJ,EACIA,aAE9B,IAAKlD,EACH,OAAO,KAGT,IAAIyJ,EAAQ3C,EAAShE,EAAUnD,eAAgBmD,EAAUjD,OACrD6J,GAAgB,EAChB5G,EAAU1D,WAAalB,EAAS0I,aAAyB,IAAV6C,IACjDA,EAAQ,EACRC,GAAgB,GAGlB,IAAMrC,EACwB,SAA3BvE,EAAUhD,cACTgD,EAAUnD,eAAiBmD,EAAUjD,OACX,UAA3BiD,EAAUhD,cACTgD,EAAUnD,eAAiBmD,EAAUjD,MAEzC,OACE,gCACE,cAAC0D,EAAD,CACEL,aAAcA,EACdyB,YAAa7B,EAAUjD,MACvBgF,YAAa/B,EAAUnD,iBAEzB,eAACoB,EAAD,WACE,gCACGf,EAAUiD,KADb,YAC2B,iCAASH,EAAUlD,UAE9C,0CAAa6J,EAAb,cACC3G,EAAU1D,WAAalB,EAASmB,OAC/B,gCACGH,EAASL,EAAYmB,EAAUlB,OADlC,QAEGuI,EACG,4CACA,wCAGPqC,GACC,sDACqB,oDAGvB,cAACC,EAAD,UAMR,SAASA,IAAqB,IAAD,EACiCrD,qBAC1D1D,GADME,EADmB,EACnBA,UAAWC,EADQ,EACRA,YAAa/C,EADL,EACKA,UAAWmD,EADhB,EACgBA,aAI3C,IAAKnD,EACH,OAAO,KAGT,IAAM4J,EACJ,cAACtE,EAAD,CACEE,KAAK,aACLC,QAAS,WACPtC,EAAa,2BACRhE,KADO,IAEVM,SAAUqD,EAAUrD,SACpBC,UAAWoD,EAAUpD,gBAM7B,GAAIoD,EAAU7C,WAAa,IAAM6C,EAAU7C,UAAY6C,EAAU5C,WAC/D,OACE,qCACE,gCAAMhB,EAASf,EAAKY,MAApB,YACC6K,KAKP,GACE9G,EAAU5C,YAAc,IACxB4C,EAAU5C,WAAa4C,EAAU7C,UAEjC,OACE,qCACE,gCAAMf,EAASf,EAAKa,OAApB,YACC4K,KAKP,GACE9G,EAAU1D,WAAalB,EAAS0I,aAChC9D,EAAUtD,YAAc,EAAIsD,EAAU1C,eAEtC,OACE,qCACE,gDACA,uEACuC,IACrC,mCAAS0C,EAAU3C,UAAnB,gBAEDyJ,KAKP,IAAMH,EAAQ3C,EAAShE,EAAUnD,eAAgBmD,EAAUjD,OAErDgK,EAAoB3K,EAASc,EAAUlB,MAEzCgL,GAAY,EAEVC,EAAY,WAChB,GAAIjH,EAAU1D,WAAalB,EAASmB,MAClC,OAAOlB,EAAKc,MAGd,GAAc,IAAVwK,EAAa,CACf,GACE3G,EAAU7C,UAAY6C,EAAU5C,YAChCF,EAAUlB,OAASX,EAAKY,KAGxB,OADA+K,GAAY,EACL3L,EAAKY,KAEd,GACE+D,EAAU5C,WAAa4C,EAAU7C,WACjCD,EAAUlB,OAASX,EAAKa,MAGxB,OADA8K,GAAY,EACL3L,EAAKa,MAIhB,OAAOH,EAAYmB,EAAUlB,MAtBb,GAyBZkL,EACAhK,EAAUgD,KAAOD,EAAYC,KAI7BF,EAAU1D,WAAalB,EAASmB,OAI7B0D,EAAYjE,OAASiL,GAG9B,OACE,qCACGD,GACC,eAACnJ,EAAD,WACE,sDAAyBkJ,EAAzB,2BACA,cAAClE,EAAD,wHAMHqE,GACC,cAAC1E,EAAD,CACEE,KAAK,0BACLC,QAAS,kBAAMtC,EAAakG,EAAStG,EAAYC,GAAIF,U,YC9KxD,SAASmH,IAAY,IAAD,EACwB3D,qBAAW1D,GAApDE,EADiB,EACjBA,UAAWC,EADM,EACNA,YAAaI,EADP,EACOA,aAE1B+G,EAAWxC,OAAOC,KAAK7E,EAAU/C,SAASoK,QAC9C,SAACb,GAAD,OAAcxG,EAAU/C,QAAQuJ,GAAUxK,OAASX,EAAKY,QAEpDqL,EAAY1C,OAAOC,KAAK7E,EAAU/C,SAASoK,QAC/C,SAACb,GAAD,OAAcxG,EAAU/C,QAAQuJ,GAAUxK,OAASX,EAAKa,SAGpDqL,EAAW,SAACvL,GAChBqE,EAAa,CACXpD,QAAQ,2BACH+C,EAAU/C,SADR,kBAEJgD,EAAYC,GAFR,2BAGAD,GAHA,IAIHjE,cAWR,OACE,eAACiC,EAAD,WACE,cAACS,EAAD,IACA,6CACA,eAACb,EAAD,CACEE,MAAO,CACLH,WAAY,aACZ4J,UAAW,WAHf,UAME,eAACvJ,EAAD,WACE,8BAAM7B,EAASf,EAAKY,QACnBmL,EAASK,KAAI,SAACjB,GAAD,OACZ,8BAAqBxG,EAAU/C,QAAQuJ,GAAUrG,MAAvCqG,MAEZ,8BACE,cAAChE,EAAD,CAAQE,KAAK,OAAOC,QAAS,kBAAM4E,EAASlM,EAAKY,cAGrD,eAACgC,EAAD,WACE,8BAAM7B,EAASf,EAAKa,SACnBoL,EAAUG,KAAI,SAACjB,GAAD,OACb,8BAAqBxG,EAAU/C,QAAQuJ,GAAUrG,MAAvCqG,MAEZ,8BACE,cAAChE,EAAD,CAAQE,KAAK,OAAOC,QAAS,kBAAM4E,EAASlM,EAAKa,kBAItD8D,EAAUxD,aAAerB,EAAWuM,WACnC,cAAClF,EAAD,CAAQE,KAAK,aAAaC,QAnCd,kBAChBtC,EC7BG,SACLpD,EACA0K,EACA3H,GAEA,IAAM4H,EAAoC,CACxCzK,UAAW,EACXC,WAAY,GAUd,OAPmBH,EAAQ0K,GAAa3L,OACrBX,EAAKY,KACtB2L,EAAcxK,WAAa,EAE3BwK,EAAczK,UAAY,EAGrB,uCACFoJ,EAASoB,EAAa3H,IACtB4H,GAFL,IAGErK,aAAc,KACdjB,SAAUlB,EAASmB,QDSjBsL,CAAY7H,EAAU/C,QAASgD,EAAYC,GAAIF,UEvB9C,SAAS8H,IAAc,IACpB9H,EAAcwD,qBAAW1D,GAAzBE,UAEFjC,EAAQ,CACZgK,UAAW,kBACXtF,OAAQ,GACRuF,WAAY,GACZpK,WAAY,UAGd,GAAIoC,EAAU1D,WAAalB,EAAS6M,SAClC,OACE,eAAChK,EAAD,CAAgBF,MAAOA,EAAvB,UACE,2CACA,cAACF,EAAD,CAAaE,MAAO,CAAEmK,SAAU,QAAhC,SACGtD,OAAOC,KAAK7E,EAAU/C,SAASwK,IAAIU,SAM5C,GAAInI,EAAU1D,WAAalB,EAAS0I,YAAa,CAC/C,IAAMsE,EAAiB,EAAIpI,EAAU1C,eAAiB0C,EAAUtD,WAChE,OACE,eAACuB,EAAD,CAAgBF,MAAOA,EAAvB,UACE,qDAAwBiC,EAAU3C,UAAlC,aACA,8BACsB,IAAnB+K,EACG,aACA,oBAAsBA,IAE5B,cAACvK,EAAD,CAAaE,MAAO,CAAEmK,SAAU,QAAhC,SACGtD,OAAOC,KAAK7E,EAAU/C,SAASwK,IAAIU,SAM5C,OACE,eAACtK,EAAD,CAAaE,MAAOA,EAApB,UACE,cAACsK,GAAD,CAAYrM,KAAMX,EAAKY,KAAM0K,MAAO3G,EAAU7C,YAC9C,cAACkL,GAAD,CAAYrM,KAAMX,EAAKa,MAAOyK,MAAO3G,EAAU5C,gBAKrD,SAASiL,GAAWvK,GAAuC,IACjDkC,EAAcwD,qBAAW1D,GAAzBE,UAEFsI,EAAU1D,OAAOC,KAAK7E,EAAU/C,SAASoK,QAC7C,SAACb,GAAD,OAAcxG,EAAU/C,QAAQuJ,GAAUxK,OAAS8B,EAAM9B,QAG3D,OACE,eAACiC,EAAD,CAAgBF,MAAO,CAAEH,WAAY,cAArC,UACE,gCACGxB,EAAS0B,EAAM9B,MADlB,KAC0B,cAACuM,GAAD,CAAiB5B,MAAO7I,EAAM6I,QADxD,aAGC2B,EAAQb,IAAIU,OAKnB,SAASI,GAAgBzK,GACvB,IAAM0K,EAAYjJ,iBAAOzB,EAAM6I,OAM/B,OAJA7H,qBAAU,WACR0J,EAAU5I,QAAU9B,EAAM6I,QACzB,CAAC7I,EAAM6I,QAEN7I,EAAM6I,MAAQ6B,EAAU5I,UAAY,EAC/B,+BAAO9B,EAAM6I,QAIpB,uBAAM5I,MAAO,CAAE0K,SAAU,YAAzB,UACG3K,EAAM6I,MACP,eAACzD,EAAD,CACEC,UAAU,oBACVpF,MAAO,CACL0K,SAAU,WACVC,SAAU,QACVC,KAAM,GACNC,MAAO,GANX,cASI9K,EAAM6I,MAAQ6B,EAAU5I,cAMlC,SAASuI,GAAY3B,GACnB,OAAO,cAACqC,GAAD,CAA0BrC,SAAUA,GAApBA,GAGzB,SAASqC,GAAU/K,GAA8B,IAAD,EACV0F,qBAAW1D,GAAvCE,EADsC,EACtCA,UAAWK,EAD2B,EAC3BA,aACbyI,EAAS9I,EAAU/C,QAAQa,EAAM0I,UAFO,EAGhBzL,oBAAS,GAHO,mBAGvCgO,EAHuC,KAG9BC,EAH8B,KAKxCC,EAAqB,CACzBC,WAAY,EACZhI,MAAO,IAGT,OACE,sBACEnD,MAAO,CAAEmL,WAAY,GAAIzL,QAAS,OAAQC,SAAU,OACpDyL,aAAc,kBAAMH,GAAW,IAC/BI,aAAc,kBAAMJ,GAAW,IAHjC,UAKGF,EAAO3I,KACP4I,EACC,qBACEhL,MAAK,2BACAkL,GADA,IAEH3H,OAAQ,YAEVqB,QAAS,kBACA3C,EAAU/C,QAAQa,EAAM0I,UAC/BnG,EAAaL,IAPjB,SAUE,cAAC,IAAD,CAAiBgD,KAAMqG,QAGzB,qBAAKtL,MAAOkL,OChIb,SAASxM,KAAa,IAAD,EACuB+G,qBAAW1D,GAApDE,EADkB,EAClBA,UAAWK,EADO,EACPA,aAAcJ,EADP,EACOA,YAE3BqJ,EAAY,SAAChN,GACbA,IAAalB,EAASmB,MACxB8D,EAAa,CACX7D,WAAYrB,EAAWuM,UACvBpL,aAGF+D,EAAa,2BACRkG,EAAStG,EAAYC,GAAIF,IADlB,IAEV1D,eAKN,OACE,eAAC2B,EAAD,WACE,cAACS,EAAD,IACA,eAACb,EAAD,CAAaE,MAAO,CAAEmK,SAAU,QAAhC,UACE,cAAC1F,EAAD,CACEE,KAAK,+BACLC,QAAS,kBAAM2G,EAAUlO,EAASmB,UAEpC,cAACiG,EAAD,CACEE,KAAK,0BACLC,QAAS,kBAAM2G,EAAUlO,EAAS0I,gBAEpC,cAACtB,EAAD,CACEE,KAAK,wBACLC,QAAS,kBAAM2G,EAAUlO,EAAS6M,mBChCrC,SAASvC,KAAgB,IAAD,EAOzBlC,qBAAW1D,GALbE,EAF2B,EAE3BA,UACAC,EAH2B,EAG3BA,YACA/C,EAJ2B,EAI3BA,UACAkD,EAL2B,EAK3BA,aACAC,EAN2B,EAM3BA,aAGF,IAAKnD,EACH,OAAO,KAGT,IAAMwH,EAAYxH,EAAUlB,OAASiE,EAAYjE,KAC3CuN,EAAyBnN,EAASL,EAAYmB,EAAUlB,OAE9D,OAAI0I,EAEA,gCACE,cAACjE,EAAD,CAAUL,aAAcA,EAAc8B,cAAelC,EAAUjD,QAC/D,eAACkB,EAAD,WACE,gCACGf,EAAUiD,KADb,YAC2B,iCAASH,EAAUlD,UAE9C,+CAAkByM,EAAlB,mCAON,gCACE,cAAC9I,EAAD,CAAUL,aAAcA,EAAc8B,cAAelC,EAAUjD,QAC/D,cAACkB,EAAD,UACE,gCACGf,EAAUiD,KADb,YAC2B,iCAASH,EAAUlD,YAGhD,eAACe,EAAD,WACE,cAAC2E,EAAD,CACEE,KAAK,wBACLC,QAAS,kBACPtC,EAAa+D,EAAepE,EAAW9C,EAAUlB,KAAM,YAG3D,cAACwG,EAAD,CACEE,KAAK,yBACLC,QAAS,kBACPtC,EAAa+D,EAAepE,EAAW9C,EAAUlB,KAAM,mBCnD5D,SAASwN,GAAmB1L,GAiBjC,OACE,sBAAKC,MAjB4B,CACjCgK,UAAW,kBACXtF,OAAQ,GACRuF,WAAY,IAcZ,UACE,cAAC/J,EAAD,UACE,iDAEF,sBACEF,MAAO,CACL0K,SAAU,YAFd,UAKE,qBAAK1K,MApB6B,CACtC0K,SAAU,WACVgB,OAAQ,GACRC,KAAM,EACNd,MAAO,EACPD,IAAK,EACLpH,OAAQ,EACRJ,gBAAiB,2BAcb,cAACV,EAAD,CACEL,aAActC,EAAMsC,aACpByB,YAAa/D,EAAMf,MACnBgF,YAAajE,EAAMjB,iBAErB,cAACoB,EAAD,UACE,gCACGH,EAAM4I,cADT,YACgC,iCAAS5I,EAAMhB,kBC3BlD,SAAS6M,KAAc,IAAD,EACQnG,qBAAW1D,GAAtCE,EADmB,EACnBA,UAAWC,EADQ,EACRA,YAEnB,OAAID,EAAUxD,aAAerB,EAAWsB,UAC/B,cAACA,GAAD,IAIPuD,EAAU1D,WAAalB,EAASmB,OAC/ByD,EAAUxD,aAAerB,EAAWuM,WACnCzH,EAAYjE,OAASX,EAAKc,MAM5B,qCACG6D,EAAUxD,aAAerB,EAAWoI,UAAY,cAACA,EAAD,IAChDvD,EAAUxD,aAAerB,EAAW0I,WAAa,cAACA,EAAD,IACjD7D,EAAUxD,aAAerB,EAAWuK,cAAgB,cAACA,GAAD,IACpD1F,EAAUxD,aAAerB,EAAWsJ,WAAa,cAACA,EAAD,IAClD,cAACqD,EAAD,IACC9H,EAAUzC,cACT,cAACiM,GAAD,eAAwBxJ,EAAUzC,kBAX/B,cAAC4J,EAAD,ICfJ,SAASyC,KAAgB,IACtBC,EAA+BC,cAA/BD,OAER,OACE,eAAChM,EAAD,CACEE,MAAO,CACLJ,eAAgB,WAChBC,WAAY,SACZoE,MAAO,QAJX,UAOE,sBAAKjE,MAAO,CAAE0E,OAAQ,EAAG3B,QAAS,GAAlC,sBAAiD+I,KACjD,cAAC,IAAD,CAAO/G,QAAS,cAACiH,GAAD,IAAcC,aAAW,EAACjH,UAAU,aAApD,SACE,qBAAKkH,SAAU,EAAGlM,MAAO,CAAE+C,QAAS,GAApC,SACE,cAAC,IAAD,CAAiBkC,KAAMkH,aAOjC,SAASH,KAAY,IACX1J,EAAiBmD,qBAAW1D,GAA5BO,aAER,OACE,qBACE4J,SAAU,EACVlM,MAAO,CAAEuD,OAAQ,WACjBqB,QAAS,kBAAMtC,EAAahE,MAH9B,wBCtBG,SAAS8N,KAAa,IAAD,EACQpP,mBAAQ,2BACrCsB,KADqC,IAExCC,SAAUlB,EAASmB,MACnBC,WAAYrB,EAAWuM,UACvBzK,QAAS,CACPmN,GAAI,CACFjK,KAAM,aACNnE,KAAMX,EAAKY,MAEboO,GAAI,CACFlK,KAAM,aACNnE,KAAMX,EAAKY,MAEbqO,GAAI,CACFnK,KAAM,cACNnE,KAAMX,EAAKa,OAEbqO,GAAI,CACFpK,KAAM,cACNnE,KAAMX,EAAKa,WApBS,mBACnB8D,EADmB,KACRK,EADQ,KAyBpBmK,EAAsB,SAAClK,GAAD,OAC1BD,EAAa,2BACRL,GACAM,KAGDvC,EAA6B,CACjCmD,MAAO,IACPuB,OAAQ,EACR3B,QAAS,EACTgE,OAAQ,mBAGJ2F,EAAa,SAACjE,GAAD,OACjB,qBAAKzI,MAAOA,EAAZ,SACE,cAAC+B,EAAiB4K,SAAlB,CACE1P,MAAOoL,EAAepG,EAAWwK,EAAqBhE,GADxD,SAGE,cAACmD,GAAD,SAKN,OACE,eAAC9L,EAAD,CACEE,MAAO,CAAEH,WAAY,UAAW6K,SAAU,WAAYE,IAAK,IAAKe,KAAM,GADxE,UAGE,eAACzL,EAAD,CACEF,MAAO,CACLH,WAAY,UACZD,eAAgB,iBAHpB,UAMG8M,EAAW,MACXA,EAAW,SAEd,eAACxM,EAAD,CACEF,MAAO,CACLH,WAAY,UACZD,eAAgB,iBAHpB,UAMG8M,EAAW,MACXA,EAAW,YCrEb,SAASE,KAAY,IAAD,EACjBd,EAAWC,cAAXD,OACR,QAAejI,IAAXiI,EACF,MAAM,IAAIe,MAAM,kBAHO,MAMWvQ,EAAsB,GAAI,QANrC,mBAMlBwQ,EANkB,KAMNC,EANM,OAQNzQ,EACjBqB,IACA,YAFK8K,EARkB,sBCPpB,SACLqD,EACArD,EACAqE,GACsD,IAAD,EACnB9P,mBAAoBsB,KADD,mBAC9C2D,EAD8C,KACnCK,EADmC,KAGrDvB,qBAAU,WACR,IAAMiM,EAAQ1F,IAAS2F,WAAWvL,IAAI,SAAWoK,GAyBjD,OAvBAkB,EAAME,GAAG,SAAS,SAACC,GACjB,IAAMC,EAA8BD,EAASE,MACvCC,EAAiB,2BAClBhP,KACA8O,GAGL,QAAqCvJ,KAAjB,OAAhBuJ,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB3O,YAKtB,YAA4CoF,IAAxCyJ,EAAkBpO,QAAQuJ,IAC5B6E,EAAkBpO,QAAQuJ,GAAY,CACpCrG,KAAM0K,EACN7O,KAAMX,EAAKc,YAEb4O,EAAMO,IAAID,SAIZhL,EAAagL,GAbXN,EAAMO,IAAID,MAeP,kBAAMN,EAAMQ,SAClB,CAAC/E,EAAUqE,EAAYhB,IAE1B,IAAMkB,EAAQ1F,IAAS2F,WAAWvL,IAAI,SAAWoK,GAEjD,MAAO,CACL7J,EACA,SAACM,GACCyK,EAAMO,IAAN,2BACKtL,GACAM,MDvByBkL,CAChC3B,EACArD,EACAqE,GAhBuB,mBAalB7K,EAbkB,KAaPK,EAbO,KAmBzB,GAAe,qBAAXwJ,EACF,OAAO,cAACM,GAAD,IAGT,IAAM1D,EAAYL,EAAepG,EAAWK,EAAcmG,GAE1D,GAA0B,IAAtBqE,EAAW/O,OACb,OACE,cAACuD,EAAD,CACEQ,QAAS,SAACM,GACR2K,EAAc3K,GACdH,EAAU/C,QAAQuJ,GAAUrG,KAAOA,EACnCE,EAAaL,MAMrB,IAAMyL,EAAe,IAAIC,gBAAgBzR,OAAOC,SAASyR,QACzD,GAAIF,EAAaG,IAAI,cAAe,CAClC,IAAMC,EAAuBJ,EAAaG,IAAI,QACjB,OAAzBC,GAAiCA,IAAyBhB,GAC5DC,EAAce,GAIlB,OAAI,OAAC7L,QAAD,IAACA,GAAD,UAACA,EAAW/C,eAAZ,aAAC,EAAqBuJ,IAKxB,eAAC1G,EAAiB4K,SAAlB,CAA2B1P,MAAOyL,EAAlC,UACE,cAACmD,GAAD,IACA,cAACD,GAAD,OANK,KExDJ,SAASmC,KACd,OACE,sBACE/N,MAAO,CACLiK,WAAY,EACZD,UAAW,kBACX/F,MAAO,OACP0G,SAAU,QACVjL,QAAS,OACTsO,cAAe,MACfnO,WAAY,UARhB,UAWE,oBAAGG,MAAO,CAAE0E,OAAQ,GAApB,UACE,cAACuJ,GAAD,CAAMjH,KAAK,+BAA+BrC,KAAK,eADjD,mEAE+D,IAC7D,cAACsJ,GAAD,CACEjH,KAAK,8CACLrC,KAAK,oBACJ,IANL,2CAWA,mBAAGuB,OAAO,SAASc,KAAK,6CAAxB,SACE,qBACEkH,IAAI,eACJC,MAAM,yBACNC,IAAI,4CACJpO,MAAO,CAAEmD,MAAO,QAASuB,OAAQ,UAO3C,SAASuJ,GAAKlO,GACZ,OACE,mBAAGiH,KAAMjH,EAAMiH,KAAMd,OAAO,SAASmI,IAAI,sBAAzC,SACGtO,EAAM4E,OClCN,SAAS2J,KACd,IAAMC,EAAUC,cAChB,OACE,eAACtO,EAAD,WACE,cAACS,EAAD,IACA,cAAC8D,EAAD,CACEE,KAAK,cACLC,QAAS,WACP2J,EAAQE,KAAK,IAAM9Q,QAGvB,oBAAGqC,MAAO,CAAE0E,OAAQ,GAApB,UACE,8CADF,6CACsE,IACpE,4CAFF,mDCTN,IAAM1E,GAA6B,CACjC0O,SAAU,IACVhK,OAAQ,EACR3B,QAAS,EACTgE,OAAQ,mBAuBK4H,OApBf,WACE,OACE,cAACzO,EAAD,UACE,qBAAKF,MAAOA,GAAZ,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4O,KAAK,WAAZ,SACE,cAAChC,GAAD,MAEF,cAAC,IAAD,CAAOgC,KAAK,IAAZ,SACE,cAACN,GAAD,SAGJ,cAACP,GAAD,YChBVzG,IAASuH,cCbqB,CAC5BC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBDMjB/H,IAASC,YAAYC,SAAS,cAAe,CAC3CC,SAAU,WACVC,YAAa,UAGf4H,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SrCoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1N,QAAQ0N,MAAMA,EAAMC,a","file":"static/js/main.12f8a5fe.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { useState } from \"react\";\n\nexport function useStorageBackedState<T>(initialValue: T, key: string): [T, (value: T) => void] {\n  const storedItem = localStorage.getItem(key);\n  if (storedItem == null) {\n    localStorage.setItem(key, JSON.stringify(initialValue));\n  } else {\n    initialValue = JSON.parse(storedItem);\n  }\n  \n  const [value, setValue] = useState(initialValue);\n  \n  return [\n    value,\n    (newValue: T) => {\n      localStorage.setItem(key, JSON.stringify(newValue));\n      setValue(newValue);\n    },\n  ];\n}\n","import { RandomSpectrumTarget } from \"./RandomSpectrumTarget\";\nimport { RandomFourCharacterString } from \"./RandomFourCharacterString\";\n\nexport enum RoundPhase {\n  SetupGame,\n  PickTeams,\n  GiveClue,\n  MakeGuess,\n  CounterGuess,\n  ViewScore,\n}\n\nexport enum GameType {\n  Teams,\n  Cooperative,\n  Freeplay,\n}\n\nexport enum Team {\n  Unset,\n  Left,\n  Right,\n}\n\nexport function TeamReverse(team: Team) {\n  if (team === Team.Left) {\n    return Team.Right;\n  }\n  if (team === Team.Right) {\n    return Team.Left;\n  }\n  return Team.Unset;\n}\n\nexport function TeamName(team: Team) {\n  if (team === Team.Left) {\n    return \"LEFT BRAIN\";\n  }\n  if (team === Team.Right) {\n    return \"RIGHT BRAIN\";\n  }\n  return \"the players\";\n}\n\nexport type PlayersTeams = {\n  [playerId: string]: {\n    name: string;\n    team: Team;\n  };\n};\n\nexport type TurnSummaryModel = {\n  spectrumCard: [string, string];\n  clueGiverName: string;\n  clue: string;\n  spectrumTarget: number;\n  guess: number;\n};\n\nexport interface GameState {\n  gameType: GameType;\n  roundPhase: RoundPhase;\n  turnsTaken: number;\n  deckSeed: string;\n  deckIndex: number;\n  spectrumTarget: number;\n  clue: string;\n  guess: number;\n  counterGuess: \"left\" | \"right\";\n  players: PlayersTeams;\n  clueGiver: string;\n  leftScore: number;\n  rightScore: number;\n  coopScore: number;\n  coopBonusTurns: number;\n  previousTurn: TurnSummaryModel | null;\n}\n\nexport function InitialGameState(): GameState {\n  return {\n    gameType: GameType.Teams,\n    roundPhase: RoundPhase.SetupGame,\n    turnsTaken: -1,\n    deckSeed: RandomFourCharacterString(),\n    deckIndex: 0,\n    spectrumTarget: RandomSpectrumTarget(),\n    clue: \"\",\n    guess: 0,\n    counterGuess: \"left\",\n    players: {},\n    clueGiver: \"\",\n    leftScore: 0,\n    rightScore: 0,\n    coopScore: 0,\n    coopBonusTurns: 0,\n    previousTurn: null,\n  };\n}\n","export function RandomSpectrumTarget() {\n  return Math.floor(Math.random() * 21);\n}\n","export function RandomFourCharacterString() {\n  const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n  let randomString = \"\";\n  for (let i = 0; i < 4; i++) {\n    randomString += characters[Math.floor(Math.random() * characters.length)];\n  }\n  return randomString;\n}\n","import React from \"react\";\n\nconst baseFlexStyles: React.CSSProperties = {\n  display: \"flex\",\n  flexFlow: \"row\",\n  justifyContent: \"space-evenly\",\n  alignItems: \"center\",\n};\n\nexport function CenteredRow(props: {\n  children: React.ReactNode;\n  style?: React.CSSProperties;\n}) {\n  return (\n    <div\n      style={{\n        ...baseFlexStyles,\n        flexFlow: \"row\",\n        ...props.style,\n      }}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport function CenteredColumn(props: {\n  children: React.ReactNode;\n  style?: React.CSSProperties;\n}) {\n  return (\n    <div\n      style={{\n        ...baseFlexStyles,\n        flexFlow: \"column\",\n        ...props.style,\n      }}\n    >\n      {props.children}\n    </div>\n  );\n}\n","const ColorScheme: any = require(\"color-scheme\");\n\nexport function GetContrastingColors(hue: number): [string, string] {\n  const scheme = new ColorScheme();\n  scheme.from_hue(hue).scheme(\"contrast\").variation(\"soft\");\n  const [primary, , , , secondary]: string[] = scheme.colors();\n  return [\"#\" + primary, \"#\" + secondary];\n}\n","import React from \"react\";\nimport { GetContrastingColors } from \"./GetContrastingColors\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nexport function LongwaveAppTitle() {\n  const [hue, setHue] = useState(0);\n  const [primary, secondary] = GetContrastingColors(hue);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setHue((hue) => (hue + 1) % 360);\n    }, 5);\n    return () => clearInterval(interval);\n  });\n  return (\n    <h1\n      style={{\n        backgroundImage: `linear-gradient(90deg, ${primary} 10%, ${secondary} 90%)`,\n        WebkitBackgroundClip: \"text\",\n        WebkitTextFillColor: \"transparent\",\n      }}\n    >\n      Longwave\n    </h1>\n  );\n}\n","import React from \"react\";\nimport { useRef } from \"react\";\nimport { CenteredColumn } from \"../common/LayoutElements\";\nimport { LongwaveAppTitle } from \"../common/Title\";\n\nexport function InputName(props: { setName: (name: string) => void }) {\n  const inputRef = useRef<HTMLInputElement>(null);\n  return (\n    <CenteredColumn>\n      <LongwaveAppTitle />\n      <div>Enter your name:</div>\n      <input\n        type=\"text\"\n        ref={inputRef}\n        onKeyDown={(event) => {\n          if (!inputRef.current) {\n            return false;\n          }\n          if (event.key !== \"Enter\") {\n            return true;\n          }\n          props.setName(inputRef.current.value);\n        }}\n      />\n    </CenteredColumn>\n  );\n}\n","import { Team, InitialGameState } from \"./GameState\";\nimport { createContext } from \"react\";\nimport { GameModel } from \"./BuildGameModel\";\n\nexport const GameModelContext = createContext<GameModel>({\n  gameState: InitialGameState(),\n  localPlayer: {\n    id: \"localPlayer\",\n    name: \"Player\",\n    team: Team.Unset,\n  },\n  clueGiver: null,\n  spectrumCard: [\"left\", \"right\"],\n  setGameState: (newState) => {\n    console.warn(\n      \"GameModelContext not provided. Got setGameState: \" +\n        JSON.stringify(newState)\n    );\n  },\n});\n","import React from \"react\";\nimport Slider from \"rc-slider\";\nimport { CenteredColumn, CenteredRow } from \"./LayoutElements\";\nimport { GetContrastingColors } from \"./GetContrastingColors\";\n\nexport function Spectrum(props: {\n  spectrumCard: [string, string];\n  handleValue?: number;\n  targetValue?: number;\n  guessingValue?: number;\n  onChange?: (newValue: number) => void;\n}) {\n  const [primary, secondary] = GetContrastingColors(\n    getStringHash(props.spectrumCard[0])\n  );\n  const cardBackStyle: React.CSSProperties = {\n    padding: 8,\n    fontWeight: \"bold\",\n  };\n\n  let handleStyle: React.CSSProperties = {\n    height: 18,\n    width: 18,\n    backgroundColor: \"rgba(255,255,255,0.8)\",\n    borderColor: \"black\",\n  };\n\n  const dotStyle = {\n    ...handleStyle,\n    cursor: \"auto\",\n    bottom: -9,\n    borderWidth: 4,\n    transform: \"translateX(-5px)\",\n  };\n\n  if (!props.onChange) {\n    handleStyle.cursor = \"auto\";\n    handleStyle.boxShadow = \"none\";\n  }\n\n  if (props.handleValue === undefined) {\n    handleStyle.display = \"none\";\n  }\n\n  let marks: {\n    [n: number]: { style: React.CSSProperties; label: string };\n  } = {};\n\n  if (props.targetValue !== undefined) {\n    marks[props.targetValue] = {\n      style: { fontWeight: \"bold\", color: \"black\", cursor: \"auto\" },\n      label: \"Target\",\n    };\n  }\n\n  if (props.guessingValue !== undefined) {\n    marks[props.guessingValue] = {\n      style: { fontWeight: \"bold\", color: \"black\", cursor: \"auto\" },\n      label: \"Guessing...\",\n    };\n  }\n\n  return (\n    <div style={{ padding: 8 }}>\n      <CenteredColumn style={{ alignItems: \"stretch\" }}>\n        <CenteredRow style={{ justifyContent: \"space-between\" }}>\n          <div style={{ ...cardBackStyle, backgroundColor: primary }}>\n            {props.spectrumCard[0]}\n          </div>\n          <div style={{ ...cardBackStyle, backgroundColor: secondary }}>\n            {props.spectrumCard[1]}\n          </div>\n        </CenteredRow>\n        <div style={{ padding: \"16px 32px\" }}>\n          <Slider\n            min={0}\n            max={20}\n            value={props.handleValue}\n            trackStyle={{\n              backgroundColor: \"transparent\",\n            }}\n            railStyle={{\n              background: `linear-gradient(90deg, ${primary} 0%, ${secondary} 100%)`,\n              height: 8,\n            }}\n            handleStyle={handleStyle}\n            onChange={props.onChange}\n            marks={marks}\n            dotStyle={dotStyle}\n          />\n        </div>\n      </CenteredColumn>\n    </div>\n  );\n}\n\nfunction getStringHash(value: string) {\n  let acc = 0;\n  for (let i = 0; i < value.length; i++) {\n    acc += value.charCodeAt(i);\n  }\n  return acc;\n}\n","import React from \"react\";\nexport function Button(props: { text: string; onClick: () => void; disabled?: boolean }) {\n  return (\n    <input\n      style={{\n        padding: 8,\n        margin: 8,\n      }}\n      type=\"button\"\n      value={props.text}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    />\n  );\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Tippy from \"@tippyjs/react\";\nimport { ReactElement } from \"react\";\n\nexport function Info(props: { children: string | ReactElement<any> }) {\n  return (\n    <Tippy content={props.children} placement=\"bottom\">\n      <div style={{ margin: 8 }}>\n        <FontAwesomeIcon icon={faInfoCircle} />\n      </div>\n    </Tippy>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport function Animate(props: {\n  children: React.ReactNode;\n  animation: \"wipe-reveal-right\" | \"fade-disappear-up\";\n  style?: React.CSSProperties;\n}) {\n  const [className, setClassName] = useState<string>(props.animation);\n\n  useEffect(() => {\n    setTimeout(() => {\n      return setClassName(props.animation + \" animate\");\n    });\n  });\n\n  return (\n    <div className={className} style={props.style}>\n      {props.children}\n    </div>\n  );\n}\n","import React, { useRef, useContext, useState } from \"react\";\n\nimport { GameType, RoundPhase } from \"../../state/GameState\";\nimport { Spectrum } from \"../common/Spectrum\";\nimport { CenteredColumn, CenteredRow } from \"../common/LayoutElements\";\nimport { Button } from \"../common/Button\";\nimport { GameModelContext } from \"../../state/GameModelContext\";\nimport { RandomSpectrumTarget } from \"../../state/RandomSpectrumTarget\";\nimport { Info } from \"../common/Info\";\nimport { Animate } from \"../common/Animate\";\n\nexport function GiveClue() {\n  const {\n    gameState,\n    localPlayer,\n    clueGiver,\n    spectrumCard,\n    setGameState,\n  } = useContext(GameModelContext);\n  const inputElement = useRef<HTMLInputElement>(null);\n  const [disableSubmit, setDisableSubmit] = useState(\n    !inputElement.current?.value?.length\n  );\n\n  if (!clueGiver) {\n    setGameState({\n      clueGiver: localPlayer.id,\n    });\n    return null;\n  }\n\n  if (localPlayer.id !== clueGiver.id) {\n    return (\n      <div>\n        <Animate animation=\"wipe-reveal-right\">\n          <Spectrum spectrumCard={spectrumCard} />\n        </Animate>\n        <CenteredColumn>\n          <div>Waiting for {clueGiver.name} to provide a clue...</div>\n        </CenteredColumn>\n      </div>\n    );\n  }\n\n  const submit = () => {\n    if (!inputElement.current?.value?.length) {\n      return false;\n    }\n\n    setGameState({\n      clue: inputElement.current.value,\n      guess: 10,\n      roundPhase: RoundPhase.MakeGuess,\n    });\n  };\n\n  const redrawCard = () =>\n    setGameState({\n      deckIndex: gameState.deckIndex + 1,\n      spectrumTarget: RandomSpectrumTarget(),\n    });\n\n  return (\n    <div>\n      {gameState.gameType !== GameType.Cooperative && (\n        <CenteredColumn style={{ alignItems: \"flex-end\" }}>\n          <Button text=\"Draw a different card\" onClick={redrawCard} />\n        </CenteredColumn>\n      )}\n      <Animate animation=\"wipe-reveal-right\">\n        <Spectrum\n          targetValue={gameState.spectrumTarget}\n          spectrumCard={spectrumCard}\n        />\n      </Animate>\n      <CenteredColumn>\n        <CenteredRow>\n          <input\n            type=\"text\"\n            placeholder=\"Clue...\"\n            ref={inputElement}\n            onKeyDown={(event) => {\n              if (event.key !== \"Enter\") {\n                return true;\n              }\n              submit();\n            }}\n            onChange={() =>\n              setDisableSubmit(!inputElement.current?.value?.length)\n            }\n          />\n          <Info>\n            <div>\n              Your clue should be some concept that lies on the provided\n              spectrum, conceptually located where the target is between the two\n              extremes. For example, \"coffee\" might be a good clue that lies on\n              a spectrum of \"hot\" to \"cold\".\n              <ul>\n                <li>Convey a single thought</li>\n                <li>Stay on topic</li>\n                <li>No numbers allowed</li>\n                <li>Be creative!</li>\n              </ul>\n            </div>\n          </Info>\n        </CenteredRow>\n        <Button text=\"Submit Clue\" onClick={submit} disabled={disableSubmit} />\n      </CenteredColumn>\n    </div>\n  );\n}\n","export function GetScore(target: number, guess: number) {\n  const difference = Math.abs(target - guess);\n  if (difference > 2) {\n    return 0;\n  }\n  return 4 - Math.floor(difference);\n}\n","import { GameState, RoundPhase, Team } from \"./GameState\";\nimport { GetScore } from \"./GetScore\";\n\nexport function ScoreCoopRound(gameState: GameState): Partial<GameState> {\n  const effectivePointsScored = GetScore(\n    gameState.spectrumTarget,\n    gameState.guess\n  );\n  let finalState: Partial<GameState> = {\n    roundPhase: RoundPhase.ViewScore,\n  }\n  \n  if (effectivePointsScored === 4) {\n    finalState.coopScore = gameState.coopScore + 3;\n    finalState.coopBonusTurns = gameState.coopBonusTurns + 1\n  } else {\n    finalState.coopScore = gameState.coopScore + effectivePointsScored;\n  }\n\n  return finalState;\n}\n\nexport function ScoreTeamRound(\n  gameState: GameState,\n  guessingTeam: Team,\n  counterGuess: \"left\" | \"right\"\n): Partial<GameState> {\n  const pointsScored = GetScore(gameState.spectrumTarget, gameState.guess);\n  const wasCounterGuessCorrect =\n    (counterGuess === \"left\" && gameState.spectrumTarget < gameState.guess) ||\n    (counterGuess === \"right\" && gameState.spectrumTarget > gameState.guess);\n\n  let finalState: Partial<GameState> = {\n    roundPhase: RoundPhase.ViewScore,\n    counterGuess,\n  };\n\n  if (guessingTeam === Team.Right) {\n    finalState.rightScore = gameState.rightScore + pointsScored;\n    finalState.leftScore =\n      gameState.leftScore + (wasCounterGuessCorrect ? 1 : 0);\n  }\n\n  if (guessingTeam === Team.Left) {\n    finalState.leftScore = gameState.leftScore + pointsScored;\n    finalState.rightScore =\n      gameState.rightScore + (wasCounterGuessCorrect ? 1 : 0);\n  }\n\n  return finalState;\n}\n","import React, { useContext } from \"react\";\nimport { GameType, RoundPhase, TeamName } from \"../../state/GameState\";\nimport { Spectrum } from \"../common/Spectrum\";\nimport { CenteredColumn } from \"../common/LayoutElements\";\nimport { Button } from \"../common/Button\";\nimport { GameModelContext } from \"../../state/GameModelContext\";\nimport { RecordEvent } from \"../../TrackEvent\";\nimport { ScoreCoopRound } from \"../../state/ScoreRound\";\n\nexport function MakeGuess() {\n  const {\n    gameState,\n    localPlayer,\n    clueGiver,\n    spectrumCard,\n    setGameState,\n  } = useContext(GameModelContext);\n\n  if (!clueGiver) {\n    return null;\n  }\n\n  const notMyTurn =\n    localPlayer.id === clueGiver.id ||\n    (gameState.gameType === GameType.Teams &&\n      localPlayer.team !== clueGiver.team);\n\n  const guessingTeamString = TeamName(clueGiver.team);\n\n  if (notMyTurn) {\n    return (\n      <div>\n        <Spectrum spectrumCard={spectrumCard} guessingValue={gameState.guess} />\n        <CenteredColumn>\n          <div>\n            {clueGiver.name}'s clue: <strong>{gameState.clue}</strong>\n          </div>\n          <div>Waiting for {guessingTeamString} to guess...</div>\n          {Object.keys(gameState.players).length < 2 && (\n            <div\n              style={{\n                margin: 12,\n                padding: \"0 1em\",\n                border: \"1px solid black\",\n              }}\n            >\n              <p>Invite other players to join the game.</p>\n              <p>Share this URL with them: {window.location.href}</p>\n            </div>\n          )}\n        </CenteredColumn>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Spectrum\n        spectrumCard={spectrumCard}\n        handleValue={gameState.guess}\n        onChange={(guess: number) => {\n          setGameState({\n            guess,\n          });\n        }}\n      />\n      <CenteredColumn>\n        <div>\n          {clueGiver.name}'s clue: <strong>{gameState.clue}</strong>\n        </div>\n        <div>\n          <Button\n            text={`Submit Guess for ${TeamName(localPlayer.team)}`}\n            onClick={() => {\n              RecordEvent(\"guess_submitted\", {\n                spectrum_card: spectrumCard.join(\"|\"),\n                clue: gameState.clue,\n                target: gameState.spectrumTarget.toString(),\n                guess: gameState.guess.toString(),\n              });\n\n              if (gameState.gameType === GameType.Teams) {\n                setGameState({\n                  roundPhase: RoundPhase.CounterGuess,\n                });\n              } else if (gameState.gameType === GameType.Cooperative) {\n                setGameState(ScoreCoopRound(gameState));\n              } else {\n                setGameState({\n                  roundPhase: RoundPhase.ViewScore,\n                });\n              }\n            }}\n          />\n        </div>\n      </CenteredColumn>\n    </div>\n  );\n}\n","import firebase from \"firebase/app\";\nimport \"firebase/analytics\";\n\nexport function RecordEvent(\n  eventName: string,\n  eventBody: { [parameterName: string]: string }\n) {\n  firebase.analytics().logEvent(eventName, {\n    app_name: \"Longwave\",\n    screen_name: \"index\",\n    ...eventBody,\n  });\n}\n","const SpectrumCards: [string, string][] = [\n  [\"Bad actor\", \"Good actor\"],\n  [\"Basic\", \"Hipster\"],\n  [\"Worthless\", \"Priceless\"],\n  [\"Nature\", \"Nurture\"],\n  [\"Happens slowly\", \"Happens suddenly\"],\n  [\"Job\", \"Career\"],\n  [\"Round\", \"Pointy\"],\n  [\"Proof that God exists\", \"Proof that God doesn't exist\"],\n  [\"Loved\", \"Hated\"],\n  [\"The Light Side of the Force\", \"The Dark Side of the Force\"],\n  [\"Stupid\", \"Brilliant\"],\n  [\"Artisanal\", \"Mass Produced\"],\n  [\"Nobody does it\", \"Everybody does it\"],\n  [\"Short lived\", \"Long lived\"],\n  [\"Dangerous job\", \"Safe job\"],\n  [\"Fantasy\", \"Sci-Fi\"],\n  [\"Plain\", \"Fancy\"],\n  [\"Has a bad reputation\", \"Has a good reputation\"],\n  [\"Ethical to eat\", \"Unethical to eat\"],\n  [\"Movie\", \"Film\"],\n  [\"Unfashionable\", \"Fashionable\"],\n  [\"Freedom fighter\", \"Terrorist\"],\n  [\"Bad superpower\", \"Good superpower\"],\n  [\"Ineffective\", \"Effective\"],\n  [\"Better hot\", \"Better cold\"],\n  [\"Square\", \"Round\"],\n  [\"Temporary\", \"Permanent\"],\n  [\"Looks like a person\", \"Doesn't look like a person\"],\n  [\"Uncool\", \"Cool\"],\n  [\"Worst living person\", \"Greatest living person\"],\n  [\"Underrated\", \"Overrated\"],\n  [\"Messy food\", \"Clean food\"],\n  [\"Unforgivable\", \"Forgivable\"],\n  [\"Failure\", \"Masterpiece\"],\n  [\"Harmless\", \"Harmful\"],\n  [\"Gryffindor\", \"Slytherin\"],\n  [\"Unhygienic\", \"Hygienic\"],\n  [\"Bad music\", \"Good music\"],\n  [\"Useless\", \"Useful\"],\n  [\"Movie that Godzilla would ruin\", \"Movie that Godzilla would improve\"],\n  [\"Unimportant\", \"Important\"],\n  [\"Easy to spell\", \"Hard to spell\"],\n  [\"Vice\", \"Virtue\"],\n  [\"Underrated musician\", \"Overrated musician\"],\n  [\"Unpopular activity\", \"Popular activity\"],\n  [\"Divided\", \"Whole\"],\n  [\"Unreliable\", \"Reliable\"],\n  [\"Easy to kill\", \"Hard to kill\"],\n  [\"Unstable\", \"Stable\"],\n  [\"Round animal\", \"Pointy animal\"],\n  [\"Bad TV show\", \"Good TV show\"],\n  [\"Traditionally masculine\", \"Traditionally feminine\"],\n  [\"Useless body part\", \"Useful body part\"],\n  [\"Fad\", \"Classic\"],\n  [\"Weak\", \"Strong\"],\n  [\"Disgusting cereal\", \"Delicious cereal\"],\n  [\"Bad\", \"Good\"],\n  [\"Mildly addictive\", \"Highly addictive\"],\n  [\"Useless in an emergency\", \"Useful in an emergency\"],\n  [\"For kids\", \"For adults\"],\n  [\"Villain\", \"Hero\"],\n  [\"Underrated thing to do\", \"Overrated thing to do\"],\n  [\"Boring\", \"Exciting\"],\n  [\"Smelly in a bad way\", \"Smelly in a good way\"],\n  [\"Unpopular\", \"Popular\"],\n  [\"Friend\", \"Enemy\"],\n  [\"Useless invention\", \"Useful invention\"],\n  [\"Liberal\", \"Conservative\"],\n  [\"Hot\", \"Cold\"],\n  [\"Normal\", \"Weird\"],\n  [\"Colorless\", \"Colorful\"],\n  [\"Low calorie\", \"High calorie\"],\n  [\"Easy subject\", \"Hard subject\"],\n  [\"Unknown\", \"Famous\"],\n  [\"Rare\", \"Common\"],\n  [\"Unsexy emoji\", \"Sexy emoji\"],\n  [\"Cheap\", \"Expensive\"],\n  [\"Underrated weapon\", \"Overrated weapon\"],\n  [\"Feels bad\", \"Feels good\"],\n  [\"Inessential\", \"Essential\"],\n  [\"Dirty\", \"Clean\"],\n  [\"Requires luck\", \"Requires skill\"],\n  [\"Flavorless\", \"Flavorful\"],\n  [\"Boring topic\", \"Fascinating topic\"],\n  [\"Casual\", \"Formal\"],\n  [\"Underpaid\", \"Overpaid\"],\n  [\"Dry\", \"Wet\"],\n  [\"Underrated skill\", \"Overrated skill\"],\n  [\"Forbidden\", \"Encouraged\"],\n  [\"Sad song\", \"Happy song\"],\n  [\"Fragile\", \"Durable\"],\n  [\"Geek\", \"Dork\"],\n  [\"Good\", \"Evil\"],\n  [\"Worst day of the year\", \"Best day of the year\"],\n  [\"Bad habit\", \"Good habit\"],\n  [\"Cat person\", \"Dog person\"],\n  [\"Wise\", \"Intelligent\"],\n  [\"Hard to do\", \"Easy to do\"],\n  [\"Mental activity\", \"Physical activity\"],\n  [\"Uncontroversial topic\", \"Controversial topic\"],\n  [\"Guilty pleasure\", \"Openly love\"],\n  [\"Untalented\", \"Talented\"],\n  [\"Hard to find\", \"Easy to find\"],\n  [\"Ugly Man\", \"Beautiful Man\"],\n  [\"Hard to remember\", \"Easy to remember\"],\n  [\"Lowbrow\", \"Highbrow\"],\n  [\"Unhealthy\", \"Healthy\"],\n  [\"Bad man\", \"Good man\"],\n  [\"Historically important\", \"Historically irrelevant\"],\n  [\"Hairless\", \"Hairy\"],\n  [\"Inflexible\", \"Flexible\"],\n  [\"Normal pet\", \"Exotic pet\"],\n  [\"Introvert\", \"Extrovert\"],\n  [\"Book was better\", \"Movie was better\"],\n  [\"Bad movie\", \"Good movie\"],\n  [\"Ugly\", \"Beautiful\"],\n  [\"Mature person\", \"Immature person\"],\n  [\"Underrated thing to own\", \"Overrated thing to own\"],\n  [\"Ordinary\", \"Extraordinary\"],\n  [\"Hard to pronounce\", \"Easy to pronounce\"],\n  [\"Poorly made\", \"Well made\"],\n  [\"Not a sandwich\", \"A sandwich\"],\n  [\"Dangerous\", \"Safe\"],\n  [\"Culturally significant\", \"Culturally insignificant\"],\n  [\"Optional\", \"Mandatory\"],\n  [\"Underrated letter of the alphabet\", \"Overrated letter of the alphabet\"],\n  [\"Low quality\", \"High quality\"],\n  [\"Unsexy animal\", \"Sexy animal\"],\n  [\"Quiet place\", \"Loud place\"],\n  [\"Comedy\", \"Drama\"],\n  [\"Need\", \"Want\"],\n  [\"Dry food\", \"Wet food\"],\n  [\"Replaceable\", \"Irreplaceable\"],\n  [\"Worst athlete of all time\", \"Greatest athlete of all time\"],\n  [\"Unethical\", \"Ethical\"],\n  [\"Boring hobby\", \"Interesting hobby\"],\n  [\"Bad pizza topping\", \"Good pizza topping\"],\n  [\"Dystopia\", \"Utopia\"],\n  [\"Rough\", \"Smooth\"],\n  [\"Bad for you\", \"Good for you\"],\n  [\"Peaceful\", \"Warlike\"],\n  [\"Underrated Movie\", \"Overrated movie\"],\n  [\"Tastes bad\", \"Tastes good\"],\n  [\"Sport\", \"Game\"],\n  [\"Sad movie\", \"Happy movie\"],\n  [\"Waste of time\", \"Good use of time\"],\n  [\"Least evil company\", \"Most evil company\"],\n  [\"Snack\", \"Meal\"],\n  [\"Unbelievable\", \"Believable\"],\n  [\"Trashy\", \"Classy\"],\n  [\"Smells bad\", \"Smells good\"],\n  [\"Star Wars\", \"Star Trek\"],\n  [\"Scary animal\", \"Nice animal\"],\n  [\"Mainstream\", \"Niche\"],\n  [\"Dark\", \"Light\"],\n  [\"Underrated actor\", \"Overrated actor\"],\n  [\"Difficult to use\", \"Easy to use\"],\n  [\"Tired\", \"Wired\"],\n  [\"80s\", \"90s\"],\n  [\"Bad person\", \"Good person\"],\n  [\"Sustenance\", \"Haute cuisine\"],\n  [\"Soft\", \"Hard\"],\n  [\"Normal thing to own\", \"Weird thing to own\"],\n  [\"Straight\", \"Curvy\"],\n  [\"Role model\", \"Bad Influence\"],\n  [\"Useless major\", \"Useful major\"],\n  [\"Mean person\", \"Nice person\"],\n  [\"Action movie\", \"Adventure movie\"],\n];\n\nconst AdvancedSpectrumCards: [string, string][] = [\n  [\"Short\", \"Long\"],\n  [\"Worst year in history\", \"Best year in history\"],\n  [\"Famous\", \"Infamous\"],\n  [\"Least powerful god\", \"Most powerful god\"],\n  [\"Unsexy color\", \"Sexy color\"],\n  [\"Benefits you\", \"Benefits everyone\"],\n  [\"Bad president\", \"Good president\"],\n  [\"Weird\", \"Strange\"],\n  [\"Derivative\", \"Original\"],\n  [\"Etiquette\", \"Manners\"],\n  [\"The worst\", \"The best\"],\n  [\"Small number\", \"Large number\"],\n  [\"Not enough\", \"Too much\"],\n  [\"Hard to sit on\", \"Easy to sit on\"],\n  [\"Talent\", \"Skill\"],\n  [\"Worst era to time travel\", \"Best era to time travel\"],\n  [\"Not huggable\", \"Huggable\"],\n  [\"Heterogeneous\", \"Homogeneous\"],\n  [\"Out of control\", \"In control\"],\n  [\"Popular\", \"Elitist\"],\n  [\"Non-partisan\", \"Partisan\"],\n  [\"Dog name\", \"Cat name\"],\n  [\"Little known fact\", \"Well known fact\"],\n  [\"Socialist\", \"Capitalist\"],\n  [\"Bad candy\", \"Good candy\"],\n  [\"Traditional\", \"Radical\"],\n  [\"Bad mouthfeel\", \"Good mouthfeel\"],\n  [\"Illegal\", \"Legal\"],\n  [\"Never on time\", \"Always on time\"],\n  [\"Won't live to 100\", \"Will live to 100\"],\n  [\"Bad Disney character\", \"Good Disney character\"],\n  [\"Similar\", \"Identical\"],\n  [\"Limp\", \"Firm\"],\n  [\"Funny topic\", \"Serious topic\"],\n  [\"Unscented\", \"Scented\"],\n  [\"Horizontal\", \"Vertical\"],\n  [\"Small\", \"Tiny\"],\n  [\"Ugly word\", \"Beautiful word\"],\n  [\"Tick\", \"Tock\"],\n  [\"Bad advice\", \"Good advice\"],\n  [\"Illegal\", \"Prohibited\"],\n  [\"Not art\", \"Art\"],\n  [\"Gossip\", \"News\"],\n  [\"Guilty pleasure\", \"Actually just bad\"],\n  [\"Old fashioned\", \"Avant garde\"],\n  [\"True\", \"False\"],\n  [\"Normal greeting\", \"Weird greeting\"],\n  [\"Dictatorship\", \"Democracy\"],\n  [\"Powerless\", \"Powerful\"],\n  [\"Vapes\", \"Doesn't Vape\"],\n  [\"Boring person\", \"Fun person\"],\n  [\"Underrated book\", \"Overrated book\"],\n  [\"Deep thought\", \"Shallow thought\"],\n  [\"Bad school\", \"Good school\"],\n  [\"Conventional wisdom\", \"Fringe belief\"],\n  [\"Worst chore\", \"Best chore\"],\n  [\"Endangered species\", \"Overpopulated species\"],\n  [\"Blue\", \"Green\"],\n  [\"Fruit\", \"Vegetable\"],\n  [\"Science\", \"Pseudoscience\"],\n  [\"Small talk\", \"Heavy topic\"],\n  [\"Bad investment\", \"Good investment\"],\n  [\"Stationary\", \"Mobile\"],\n  [\"Local issue\", \"Global issue\"],\n  [\"Thrilling\", \"Terrifying\"],\n  [\"Nerd\", \"Jock\"],\n  [\"Expected\", \"Unexpected\"],\n  [\"Person you could beat up\", \"Person who'd beat you up\"],\n  [\"Limited\", \"Infinite\"],\n  [\"Casual event\", \"Formal event\"],\n  [\"Unreasonable phobia\", \"Reasonable phobia\"],\n  [\"Underrated game\", \"Overrated game\"],\n  [\"Religious\", \"Sacrilegious\"],\n  [\"Mild\", \"Spicy\"],\n  [\"Genuine person\", \"Phony person\"],\n  [\"Unnatural\", \"Natural\"],\n  [\"Secret\", \"Public Knowledge\"],\n  [\"Too small\", \"Too big\"],\n  [\"Art\", \"Commerce\"],\n  [\"One hit wonder\", \"Pop icon\"],\n  [\"Unsexy Pokémon\", \"Sexy Pokémon\"],\n  [\"Quiet\", \"Loud\"],\n  [\"Inclusive\", \"Exclusive\"],\n  [\"Bad dog (breed)\", \"Good dog (breed)\"],\n];\n\nexport const AllCards = [...SpectrumCards, ...AdvancedSpectrumCards];\n","import { GameState, Team } from \"./GameState\";\nimport memoize from \"lodash/memoize\";\nimport { AllCards } from \"./SpectrumCards\";\n\nconst shuffleSeed: {\n  shuffle: <T>(arr: T[], seed: string) => T[];\n} = require(\"shuffle-seed\");\n\ntype Player = {\n  id: string;\n  name: string;\n  team: Team;\n};\n\nexport interface GameModel {\n  gameState: GameState;\n  localPlayer: Player;\n  clueGiver: Player | null;\n  spectrumCard: [string, string];\n  setGameState: (newState: Partial<GameState>) => void;\n}\n\nconst getSeededDeck = memoize((seed: string, cards: [string, string][]) =>\n  shuffleSeed.shuffle(cards, seed)\n);\n\nexport function BuildGameModel(\n  gameState: GameState,\n  setGameState: (newState: Partial<GameState>) => void,\n  localPlayerId: string\n): GameModel {\n  const clueGiver = gameState.players[gameState.clueGiver]\n    ? {\n        ...gameState.players[gameState.clueGiver],\n        id: gameState.clueGiver,\n      }\n    : null;\n\n  const spectrumDeck = getSeededDeck(gameState.deckSeed, AllCards);\n\n  return {\n    gameState,\n    localPlayer: { ...gameState.players[localPlayerId], id: localPlayerId },\n    clueGiver,\n    spectrumCard: spectrumDeck[gameState.deckIndex % spectrumDeck.length],\n    setGameState,\n  };\n}\n","import { RoundPhase, GameState } from \"./GameState\";\nimport { RandomSpectrumTarget } from \"./RandomSpectrumTarget\";\nimport { BuildGameModel } from \"./BuildGameModel\";\n\nexport function NewRound(\n  playerId: string,\n  gameState: GameState\n): Partial<GameState> {\n  const gameModel = BuildGameModel(gameState, () => {}, playerId);\n\n  const newState: Partial<GameState> = {\n    clueGiver: playerId,\n    roundPhase: RoundPhase.GiveClue,\n    deckIndex: gameState.deckIndex + 1,\n    turnsTaken: gameState.turnsTaken + 1,\n    spectrumTarget: RandomSpectrumTarget(),\n  };\n\n  if (gameModel.clueGiver !== null) {\n    newState.previousTurn = {\n      spectrumCard: gameModel.spectrumCard,\n      spectrumTarget: gameState.spectrumTarget,\n      clueGiverName: gameModel.clueGiver.name,\n      clue: gameState.clue,\n      guess: gameState.guess,\n    };\n  }\n\n  return newState;\n}\n","import React, { useContext } from \"react\";\nimport { GetScore } from \"../../state/GetScore\";\nimport { CenteredColumn, CenteredRow } from \"../common/LayoutElements\";\nimport { Spectrum } from \"../common/Spectrum\";\nimport { Button } from \"../common/Button\";\nimport {\n  GameType,\n  Team,\n  InitialGameState,\n  TeamName,\n  TeamReverse,\n} from \"../../state/GameState\";\nimport { GameModelContext } from \"../../state/GameModelContext\";\nimport { NewRound } from \"../../state/NewRound\";\nimport { Info } from \"../common/Info\";\n\nexport function ViewScore() {\n  const { gameState, clueGiver, spectrumCard } = useContext(GameModelContext);\n\n  if (!clueGiver) {\n    return null;\n  }\n\n  let score = GetScore(gameState.spectrumTarget, gameState.guess);\n  let bonusCoopTurn = false;\n  if (gameState.gameType === GameType.Cooperative && score === 4) {\n    score = 3;\n    bonusCoopTurn = true;\n  }\n\n  const wasCounterGuessCorrect =\n    (gameState.counterGuess === \"left\" &&\n      gameState.spectrumTarget < gameState.guess) ||\n    (gameState.counterGuess === \"right\" &&\n      gameState.spectrumTarget > gameState.guess);\n\n  return (\n    <div>\n      <Spectrum\n        spectrumCard={spectrumCard}\n        handleValue={gameState.guess}\n        targetValue={gameState.spectrumTarget}\n      />\n      <CenteredColumn>\n        <div>\n          {clueGiver.name}'s clue: <strong>{gameState.clue}</strong>\n        </div>\n        <div>Score: {score} points!</div>\n        {gameState.gameType === GameType.Teams && (\n          <div>\n            {TeamName(TeamReverse(clueGiver.team))} gets\n            {wasCounterGuessCorrect\n              ? \" 1 point for their correct counter guess.\"\n              : \" 0 points for their counter guess.\"}\n          </div>\n        )}\n        {bonusCoopTurn && (\n          <div>\n            Your team earned a <strong>bonus turn!</strong>\n          </div>\n        )}\n        <NextTurnOrEndGame />\n      </CenteredColumn>\n    </div>\n  );\n}\n\nfunction NextTurnOrEndGame() {\n  const { gameState, localPlayer, clueGiver, setGameState } = useContext(\n    GameModelContext\n  );\n\n  if (!clueGiver) {\n    return null;\n  }\n\n  const resetButton = (\n    <Button\n      text=\"Reset Game\"\n      onClick={() => {\n        setGameState({\n          ...InitialGameState(),\n          deckSeed: gameState.deckSeed,\n          deckIndex: gameState.deckIndex,\n        });\n      }}\n    />\n  );\n\n  if (gameState.leftScore >= 10 && gameState.leftScore > gameState.rightScore) {\n    return (\n      <>\n        <div>{TeamName(Team.Left)} wins!</div>\n        {resetButton}\n      </>\n    );\n  }\n\n  if (\n    gameState.rightScore >= 10 &&\n    gameState.rightScore > gameState.leftScore\n  ) {\n    return (\n      <>\n        <div>{TeamName(Team.Right)} wins!</div>\n        {resetButton}\n      </>\n    );\n  }\n\n  if (\n    gameState.gameType === GameType.Cooperative &&\n    gameState.turnsTaken >= 7 + gameState.coopBonusTurns\n  ) {\n    return (\n      <>\n        <div>Game Complete</div>\n        <div>\n          Your team's final cooperative score:{\" \"}\n          <strong>{gameState.coopScore} POINTS</strong>\n        </div>\n        {resetButton}\n      </>\n    );\n  }\n\n  const score = GetScore(gameState.spectrumTarget, gameState.guess);\n\n  const scoringTeamString = TeamName(clueGiver.team);\n\n  let bonusTurn = false;\n\n  const nextTeam = (() => {\n    if (gameState.gameType !== GameType.Teams) {\n      return Team.Unset;\n    }\n\n    if (score === 4) {\n      if (\n        gameState.leftScore < gameState.rightScore &&\n        clueGiver.team === Team.Left\n      ) {\n        bonusTurn = true;\n        return Team.Left;\n      }\n      if (\n        gameState.rightScore < gameState.leftScore &&\n        clueGiver.team === Team.Right\n      ) {\n        bonusTurn = true;\n        return Team.Right;\n      }\n    }\n\n    return TeamReverse(clueGiver.team);\n  })();\n\n  const eligibleToDraw = (() => {\n    if (clueGiver.id === localPlayer.id) {\n      return false;\n    }\n\n    if (gameState.gameType !== GameType.Teams) {\n      return true;\n    }\n\n    return localPlayer.team === nextTeam;\n  })();\n\n  return (\n    <>\n      {bonusTurn && (\n        <CenteredRow>\n          <div>Catchup activated: {scoringTeamString} takes a bonus turn! </div>\n          <Info>\n            After a team scores a four-point round, they get a bonus turn if\n            they are still behind the other team.\n          </Info>\n        </CenteredRow>\n      )}\n      {eligibleToDraw && (\n        <Button\n          text=\"Draw next Spectrum Card\"\n          onClick={() => setGameState(NewRound(localPlayer.id, gameState))}\n        />\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { CenteredRow, CenteredColumn } from \"../common/LayoutElements\";\nimport { RoundPhase, Team, TeamName } from \"../../state/GameState\";\nimport { Button } from \"../common/Button\";\nimport { LongwaveAppTitle } from \"../common/Title\";\nimport { useContext } from \"react\";\nimport { GameModelContext } from \"../../state/GameModelContext\";\nimport { NewTeamGame } from \"../../state/NewGame\";\n\nexport function JoinTeam() {\n  const { gameState, localPlayer, setGameState } = useContext(GameModelContext);\n\n  const leftTeam = Object.keys(gameState.players).filter(\n    (playerId) => gameState.players[playerId].team === Team.Left\n  );\n  const rightTeam = Object.keys(gameState.players).filter(\n    (playerId) => gameState.players[playerId].team === Team.Right\n  );\n\n  const joinTeam = (team: Team) => {\n    setGameState({\n      players: {\n        ...gameState.players,\n        [localPlayer.id]: {\n          ...localPlayer,\n          team,\n        },\n      },\n    });\n  };\n\n  const startGame = () =>\n    setGameState(\n      NewTeamGame(gameState.players, localPlayer.id, gameState)\n    );\n\n  return (\n    <CenteredColumn>\n      <LongwaveAppTitle />\n      <div>Join Team:</div>\n      <CenteredRow\n        style={{\n          alignItems: \"flex-start\",\n          alignSelf: \"stretch\",\n        }}\n      >\n        <CenteredColumn>\n          <div>{TeamName(Team.Left)}</div>\n          {leftTeam.map((playerId) => (\n            <div key={playerId}>{gameState.players[playerId].name}</div>\n          ))}\n          <div>\n            <Button text=\"Join\" onClick={() => joinTeam(Team.Left)} />\n          </div>\n        </CenteredColumn>\n        <CenteredColumn>\n          <div>{TeamName(Team.Right)}</div>\n          {rightTeam.map((playerId) => (\n            <div key={playerId}>{gameState.players[playerId].name}</div>\n          ))}\n          <div>\n            <Button text=\"Join\" onClick={() => joinTeam(Team.Right)} />\n          </div>\n        </CenteredColumn>\n      </CenteredRow>\n      {gameState.roundPhase === RoundPhase.PickTeams && (\n        <Button text=\"Start Game\" onClick={startGame} />\n      )}\n    </CenteredColumn>\n  );\n}\n","import { GameType, PlayersTeams, GameState, Team } from \"./GameState\";\nimport { NewRound } from \"./NewRound\";\n\nexport function NewTeamGame(\n  players: PlayersTeams,\n  startPlayer: string,\n  gameState: GameState\n): Partial<GameState> {\n  const initialScores: Partial<GameState> = {\n    leftScore: 0,\n    rightScore: 0,\n  };\n\n  const playerTeam = players[startPlayer].team;\n  if (playerTeam === Team.Left) {\n    initialScores.rightScore = 1;\n  } else {\n    initialScores.leftScore = 1;\n  }\n\n  return {\n    ...NewRound(startPlayer, gameState),\n    ...initialScores,\n    previousTurn: null,\n    gameType: GameType.Teams,\n  };\n}\n","import React, { useState, useContext } from \"react\";\nimport { GameType, Team, TeamName } from \"../../state/GameState\";\nimport { CenteredRow, CenteredColumn } from \"../common/LayoutElements\";\nimport { GameModelContext } from \"../../state/GameModelContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Animate } from \"../common/Animate\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\n\nexport function Scoreboard() {\n  const { gameState } = useContext(GameModelContext);\n\n  const style = {\n    borderTop: \"1px solid black\",\n    margin: 16,\n    paddingTop: 16,\n    alignItems: \"center\",\n  };\n\n  if (gameState.gameType === GameType.Freeplay) {\n    return (\n      <CenteredColumn style={style}>\n        <em>Free Play</em>\n        <CenteredRow style={{ flexWrap: \"wrap\" }}>\n          {Object.keys(gameState.players).map(toPlayerRow)}\n        </CenteredRow>\n      </CenteredColumn>\n    );\n  }\n\n  if (gameState.gameType === GameType.Cooperative) {\n    const cardsRemaining = 7 + gameState.coopBonusTurns - gameState.turnsTaken;\n    return (\n      <CenteredColumn style={style}>\n        <em>Cooperative Score: {gameState.coopScore} POINTS</em>\n        <div>\n          {cardsRemaining === 0\n            ? \"Last Card!\"\n            : \"Cards remaining: \" + cardsRemaining}\n        </div>\n        <CenteredRow style={{ flexWrap: \"wrap\" }}>\n          {Object.keys(gameState.players).map(toPlayerRow)}\n        </CenteredRow>\n      </CenteredColumn>\n    );\n  }\n\n  return (\n    <CenteredRow style={style}>\n      <TeamColumn team={Team.Left} score={gameState.leftScore} />\n      <TeamColumn team={Team.Right} score={gameState.rightScore} />\n    </CenteredRow>\n  );\n}\n\nfunction TeamColumn(props: { team: Team; score: number }) {\n  const { gameState } = useContext(GameModelContext);\n\n  const members = Object.keys(gameState.players).filter(\n    (playerId) => gameState.players[playerId].team === props.team\n  );\n\n  return (\n    <CenteredColumn style={{ alignItems: \"flex-start\" }}>\n      <div>\n        {TeamName(props.team)}: <AnimatableScore score={props.score} /> POINTS\n      </div>\n      {members.map(toPlayerRow)}\n    </CenteredColumn>\n  );\n}\n\nfunction AnimatableScore(props: { score: number }) {\n  const lastScore = useRef(props.score);\n\n  useEffect(() => {\n    lastScore.current = props.score;\n  }, [props.score]);\n\n  if (props.score - lastScore.current === 0) {\n    return <span>{props.score}</span>;\n  }\n\n  return (\n    <span style={{ position: \"relative\" }}>\n      {props.score}\n      <Animate\n        animation=\"fade-disappear-up\"\n        style={{\n          position: \"absolute\",\n          fontSize: \"small\",\n          top: -16,\n          right: 0,\n        }}\n      >\n        +{props.score - lastScore.current}\n      </Animate>\n    </span>\n  );\n}\n\nfunction toPlayerRow(playerId: string) {\n  return <PlayerRow key={playerId} playerId={playerId} />;\n}\n\nfunction PlayerRow(props: { playerId: string }) {\n  const { gameState, setGameState } = useContext(GameModelContext);\n  const player = gameState.players[props.playerId];\n  const [hovered, setHovered] = useState(false);\n\n  const iconContainerStyle = {\n    marginLeft: 4,\n    width: 20,\n  };\n\n  return (\n    <div\n      style={{ marginLeft: 16, display: \"flex\", flexFlow: \"row\" }}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n    >\n      {player.name}\n      {hovered ? (\n        <div\n          style={{\n            ...iconContainerStyle,\n            cursor: \"pointer\",\n          }}\n          onClick={() => {\n            delete gameState.players[props.playerId];\n            setGameState(gameState);\n          }}\n        >\n          <FontAwesomeIcon icon={faTimesCircle} />\n        </div>\n      ) : (\n        <div style={iconContainerStyle} />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { GameType, RoundPhase } from \"../../state/GameState\";\nimport { CenteredRow, CenteredColumn } from \"../common/LayoutElements\";\nimport { Button } from \"../common/Button\";\nimport { LongwaveAppTitle } from \"../common/Title\";\nimport { useContext } from \"react\";\nimport { GameModelContext } from \"../../state/GameModelContext\";\nimport { NewRound } from \"../../state/NewRound\";\n\nexport function SetupGame() {\n  const { gameState, setGameState, localPlayer } = useContext(GameModelContext);\n\n  const startGame = (gameType: GameType) => {\n    if (gameType === GameType.Teams) {\n      setGameState({\n        roundPhase: RoundPhase.PickTeams,\n        gameType,\n      });\n    } else {\n      setGameState({\n        ...NewRound(localPlayer.id, gameState),\n        gameType,\n      });\n    }\n  };\n\n  return (\n    <CenteredColumn>\n      <LongwaveAppTitle />\n      <CenteredRow style={{ flexWrap: \"wrap\" }}>\n        <Button\n          text=\"Standard (Teams): 4+ Players\"\n          onClick={() => startGame(GameType.Teams)}\n        />\n        <Button\n          text=\"Cooperative: 2+ Players\"\n          onClick={() => startGame(GameType.Cooperative)}\n        />\n        <Button\n          text=\"Free Play: 2+ Players\"\n          onClick={() => startGame(GameType.Freeplay)}\n        />\n      </CenteredRow>\n    </CenteredColumn>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { TeamReverse, TeamName } from \"../../state/GameState\";\nimport { Spectrum } from \"../common/Spectrum\";\nimport { CenteredColumn, CenteredRow } from \"../common/LayoutElements\";\nimport { Button } from \"../common/Button\";\nimport { GameModelContext } from \"../../state/GameModelContext\";\nimport { ScoreTeamRound } from \"../../state/ScoreRound\";\n\nexport function CounterGuess() {\n  const {\n    gameState,\n    localPlayer,\n    clueGiver,\n    spectrumCard,\n    setGameState,\n  } = useContext(GameModelContext);\n\n  if (!clueGiver) {\n    return null;\n  }\n\n  const notMyTurn = clueGiver.team === localPlayer.team;\n  const counterGuessTeamString = TeamName(TeamReverse(clueGiver.team));\n\n  if (notMyTurn) {\n    return (\n      <div>\n        <Spectrum spectrumCard={spectrumCard} guessingValue={gameState.guess} />\n        <CenteredColumn>\n          <div>\n            {clueGiver.name}'s clue: <strong>{gameState.clue}</strong>\n          </div>\n          <div>Waiting for {counterGuessTeamString} to guess left/right...</div>\n        </CenteredColumn>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Spectrum spectrumCard={spectrumCard} guessingValue={gameState.guess} />\n      <CenteredColumn>\n        <div>\n          {clueGiver.name}'s clue: <strong>{gameState.clue}</strong>\n        </div>\n      </CenteredColumn>\n      <CenteredRow>\n        <Button\n          text=\"Target is to the Left\"\n          onClick={() =>\n            setGameState(ScoreTeamRound(gameState, clueGiver.team, \"left\"))\n          }\n        />\n        <Button\n          text=\"Target is to the Right\"\n          onClick={() =>\n            setGameState(ScoreTeamRound(gameState, clueGiver.team, \"right\"))\n          }\n        />\n      </CenteredRow>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { TurnSummaryModel } from \"../../state/GameState\";\nimport { CenteredColumn } from \"../common/LayoutElements\";\nimport { Spectrum } from \"../common/Spectrum\";\n\nexport function PreviousTurnResult(props: TurnSummaryModel) {\n  const style: React.CSSProperties = {\n    borderTop: \"1px solid black\",\n    margin: 16,\n    paddingTop: 16,\n  };\n\n  const glassStyle: React.CSSProperties = {\n    position: \"absolute\",\n    zIndex: 10,\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(255,255,255,0.5)\",\n  };\n\n  return (\n    <div style={style}>\n      <CenteredColumn>\n        <em>Previous Turn</em>\n      </CenteredColumn>\n      <div\n        style={{\n          position: \"relative\",\n        }}\n      >\n        <div style={glassStyle} />\n        <Spectrum\n          spectrumCard={props.spectrumCard}\n          handleValue={props.guess}\n          targetValue={props.spectrumTarget}\n        />\n        <CenteredColumn>\n          <div>\n            {props.clueGiverName}'s clue: <strong>{props.clue}</strong>\n          </div>\n        </CenteredColumn>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { RoundPhase, GameType, Team } from \"../../state/GameState\";\nimport { GiveClue } from \"./GiveClue\";\nimport { MakeGuess } from \"./MakeGuess\";\nimport { ViewScore } from \"./ViewScore\";\nimport { JoinTeam } from \"./JoinTeam\";\nimport { Scoreboard } from \"./Scoreboard\";\nimport { SetupGame } from \"./SetupGame\";\nimport { CounterGuess } from \"./CounterGuess\";\nimport { useContext } from \"react\";\nimport { GameModelContext } from \"../../state/GameModelContext\";\nimport { PreviousTurnResult } from \"./PreviousTurnResult\";\n\nexport function ActiveGame() {\n  const { gameState, localPlayer } = useContext(GameModelContext);\n\n  if (gameState.roundPhase === RoundPhase.SetupGame) {\n    return <SetupGame />;\n  }\n\n  if (\n    gameState.gameType === GameType.Teams &&\n    (gameState.roundPhase === RoundPhase.PickTeams ||\n      localPlayer.team === Team.Unset)\n  ) {\n    return <JoinTeam />;\n  }\n\n  return (\n    <>\n      {gameState.roundPhase === RoundPhase.GiveClue && <GiveClue />}\n      {gameState.roundPhase === RoundPhase.MakeGuess && <MakeGuess />}\n      {gameState.roundPhase === RoundPhase.CounterGuess && <CounterGuess />}\n      {gameState.roundPhase === RoundPhase.ViewScore && <ViewScore />}\n      <Scoreboard />\n      {gameState.previousTurn && (\n        <PreviousTurnResult {...gameState.previousTurn} />\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CenteredRow } from \"./LayoutElements\";\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\nimport Tippy from \"@tippyjs/react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useContext } from \"react\";\nimport { GameModelContext } from \"../../state/GameModelContext\";\nimport { InitialGameState } from \"../../state/GameState\";\n\nexport function RoomIdHeader() {\n  const { roomId }: {[k: string]: any} = useParams();\n\n  return (\n    <CenteredRow\n      style={{\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        color: \"gray\",\n      }}\n    >\n      <div style={{ margin: 4, padding: 4 }}>Room ID: {roomId}</div>\n      <Tippy content={<RoomMenu />} interactive placement=\"bottom-end\">\n        <div tabIndex={0} style={{ padding: 8 }}>\n          <FontAwesomeIcon icon={faEllipsisV} />\n        </div>\n      </Tippy>\n    </CenteredRow>\n  );\n}\n\nfunction RoomMenu() {\n  const { setGameState } = useContext(GameModelContext);\n\n  return (\n    <div\n      tabIndex={0}\n      style={{ cursor: \"pointer\" }}\n      onClick={() => setGameState(InitialGameState())}\n    >\n      Reset Room\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { GameModelContext } from \"../../state/GameModelContext\";\nimport { ActiveGame } from \"./ActiveGame\";\nimport { BuildGameModel } from \"../../state/BuildGameModel\";\nimport { CenteredRow, CenteredColumn } from \"../common/LayoutElements\";\nimport {\n  InitialGameState,\n  GameState,\n  Team,\n  GameType,\n  RoundPhase,\n} from \"../../state/GameState\";\n\nexport function FakeRooms() {\n  const [gameState, setGameState] = useState<GameState>({\n    ...InitialGameState(),\n    gameType: GameType.Teams,\n    roundPhase: RoundPhase.PickTeams,\n    players: {\n      ul: {\n        name: \"Upper Left\",\n        team: Team.Left,\n      },\n      ll: {\n        name: \"Lower Left\",\n        team: Team.Left,\n      },\n      ur: {\n        name: \"Upper Right\",\n        team: Team.Right,\n      },\n      lr: {\n        name: \"Lower Right\",\n        team: Team.Right,\n      },\n    },\n  });\n\n  const setPartialGameState = (newState: Partial<GameState>) =>\n    setGameState({\n      ...gameState,\n      ...newState,\n    });\n\n  const style: React.CSSProperties = {\n    width: 500,\n    margin: 4,\n    padding: 4,\n    border: \"1px solid black\",\n  };\n\n  const renderGame = (playerId: string) => (\n    <div style={style}>\n      <GameModelContext.Provider\n        value={BuildGameModel(gameState, setPartialGameState, playerId)}\n      >\n        <ActiveGame />\n      </GameModelContext.Provider>\n    </div>\n  );\n\n  return (\n    <CenteredRow\n      style={{ alignItems: \"stretch\", position: \"absolute\", top: 100, left: 0 }}\n    >\n      <CenteredColumn\n        style={{\n          alignItems: \"stretch\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {renderGame(\"ul\")}\n        {renderGame(\"ll\")}\n      </CenteredColumn>\n      <CenteredColumn\n        style={{\n          alignItems: \"stretch\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {renderGame(\"ur\")}\n        {renderGame(\"lr\")}\n      </CenteredColumn>\n    </CenteredRow>\n  );\n}\n","import { useParams } from \"react-router-dom\";\nimport React from \"react\";\nimport { useStorageBackedState } from \"../hooks/useStorageBackedState\";\nimport { useNetworkBackedGameState } from \"../hooks/useNetworkBackedGameState\";\nimport { InputName } from \"./InputName\";\nimport { RandomFourCharacterString } from \"../../state/RandomFourCharacterString\";\nimport { GameModelContext } from \"../../state/GameModelContext\";\nimport { ActiveGame } from \"./ActiveGame\";\nimport { BuildGameModel } from \"../../state/BuildGameModel\";\nimport { RoomIdHeader } from \"../common/RoomIdHeader\";\nimport { FakeRooms } from \"./FakeRooms\";\n\nexport function GameRoom() {\n  const { roomId } = useParams<{ roomId: string }>();\n  if (roomId === undefined) {\n    throw new Error(\"RoomId missing\");\n  }\n\n  const [playerName, setPlayerName] = useStorageBackedState(\"\", \"name\");\n\n  const [playerId] = useStorageBackedState(\n    RandomFourCharacterString(),\n    \"playerId\"\n  );\n\n  const [gameState, setGameState] = useNetworkBackedGameState(\n    roomId,\n    playerId,\n    playerName\n  );\n\n  if (roomId === \"MULTIPLAYER_TEST\") {\n    return <FakeRooms />;\n  }\n\n  const gameModel = BuildGameModel(gameState, setGameState, playerId);\n\n  if (playerName.length === 0) {\n    return (\n      <InputName\n        setName={(name) => {\n          setPlayerName(name);\n          gameState.players[playerId].name = name;\n          setGameState(gameState);\n        }}\n      />\n    );\n  }\n\n  const searchParams = new URLSearchParams(window.location.search);\n  if (searchParams.get(\"rocketcrab\")) {\n    const rocketcrabPlayerName = searchParams.get(\"name\");\n    if (rocketcrabPlayerName !== null && rocketcrabPlayerName !== playerName) {\n      setPlayerName(rocketcrabPlayerName);\n    }\n  }\n\n  if (!gameState?.players?.[playerId]) {\n    return null;\n  }\n\n  return (\n    <GameModelContext.Provider value={gameModel}>\n      <RoomIdHeader />\n      <ActiveGame />\n    </GameModelContext.Provider>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport { GameState, InitialGameState, Team } from \"../../state/GameState\";\n\nexport function useNetworkBackedGameState(\n  roomId: string,\n  playerId: string,\n  playerName: string\n): [GameState, (newState: Partial<GameState>) => void] {\n  const [gameState, setGameState] = useState<GameState>(InitialGameState());\n\n  useEffect(() => {\n    const dbRef = firebase.database().ref(\"rooms/\" + roomId);\n\n    dbRef.on(\"value\", (appState) => {\n      const networkGameState: GameState = appState.val();\n      const completeGameState = {\n        ...InitialGameState(),\n        ...networkGameState,\n      };\n\n      if (networkGameState?.roundPhase === undefined) {\n        dbRef.set(completeGameState);\n        return;\n      }\n\n      if (completeGameState.players[playerId] === undefined) {\n        completeGameState.players[playerId] = {\n          name: playerName,\n          team: Team.Unset,\n        };\n        dbRef.set(completeGameState);\n        return;\n      }\n\n      setGameState(completeGameState);\n    });\n    return () => dbRef.off();\n  }, [playerId, playerName, roomId]);\n\n  const dbRef = firebase.database().ref(\"rooms/\" + roomId);\n\n  return [\n    gameState,\n    (newState: Partial<GameState>) => {\n      dbRef.set({\n        ...gameState,\n        ...newState,\n      });\n    },\n  ];\n}\n","import React from \"react\";\n\nexport function CommonFooter() {\n  return (\n    <div\n      style={{\n        paddingTop: 8,\n        borderTop: \"1px solid black\",\n        color: \"gray\",\n        fontSize: \"small\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n      }}\n    >\n      <p style={{ margin: 8 }}>\n        <Link href=\"https://www.wavelength.zone/\" text=\"Wavelength\" /> is\n        designed by Wolfgang Warsch, Alex Hague, and Justin Vickers.{\" \"}\n        <Link\n          href=\"https://github.com/cynicaloptimist/longwave\"\n          text=\"Adapted for web\"\n        />{\" \"}\n        by Evan Bailey and Margarethe Schoen.\n      </p>\n      {/* we want referrer, so: */}\n      {/* eslint-disable-next-line react/jsx-no-target-blank */}\n      <a target=\"_blank\" href=\"https://www.patreon.com/improvedinitiative\">\n        <img\n          alt=\"Patreon logo\"\n          title=\"Support us on Patreon!\"\n          src=\"./Digital-Patreon-Wordmark_FieryCoral.png\"\n          style={{ width: \"150px\", margin: 8 }}\n        />\n      </a>\n    </div>\n  );\n}\n\nfunction Link(props: { href: string; text: string }) {\n  return (\n    <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {props.text}\n    </a>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { RandomFourCharacterString } from \"../../state/RandomFourCharacterString\";\nimport { CenteredColumn } from \"./LayoutElements\";\nimport { Button } from \"./Button\";\nimport { LongwaveAppTitle } from \"./Title\";\n\nexport function LandingPage() {\n  const history = useHistory();\n  return (\n    <CenteredColumn>\n      <LongwaveAppTitle />\n      <Button\n        text=\"Create Room\"\n        onClick={() => {\n          history.push(\"/\" + RandomFourCharacterString());\n        }}\n      />\n      <p style={{ margin: 8 }}>\n        <strong>Longwave</strong> is an online, real-time adaptation of the{\" \"}\n        <em>Wavelength</em> board game. Best enjoyed with voice chat!\n      </p>\n    </CenteredColumn>\n  );\n}\n","import React from \"react\";\n\nimport \"../App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { GameRoom } from \"./gameplay/GameRoom\";\nimport { CenteredColumn } from \"./common/LayoutElements\";\nimport { CommonFooter } from \"./common/CommonFooter\";\nimport { LandingPage } from \"./common/LandingPage\";\n\nconst style: React.CSSProperties = {\n  maxWidth: 500,\n  margin: 4,\n  padding: 4,\n  border: \"1px solid black\",\n};\n\nfunction App() {\n  return (\n    <CenteredColumn>\n      <div style={style}>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/:roomId\">\n              <GameRoom />\n            </Route>\n            <Route path=\"/\">\n              <LandingPage />\n            </Route>\n          </Switch>\n          <CommonFooter />\n        </BrowserRouter>\n      </div>\n    </CenteredColumn>\n  );\n}\n\nexport default App;\n","import \"./index.css\";\nimport \"rc-slider/assets/index.css\";\nimport \"tippy.js/dist/tippy.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport firebase from \"firebase/app\";\n\nimport App from \"./components/App\";\nimport { firebaseConfig } from \"./firebaseConfig\";\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics().logEvent(\"screen_view\", {\n  app_name: \"Longwave\",\n  screen_name: \"index\",\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyAyPMuIGreq81gLErYeKGkEje851Xdh_kc\",\n  authDomain: \"wavelength-online.firebaseapp.com\",\n  databaseURL: \"https://wavelength-online.firebaseio.com\",\n  projectId: \"wavelength-online\",\n  storageBucket: \"wavelength-online.appspot.com\",\n  messagingSenderId: \"811157116454\",\n  appId: \"1:811157116454:web:be3d3e6b17629700c038e7\",\n  measurementId: \"G-XZ13S15LMC\",\n};\n"],"sourceRoot":""}